<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCertification" xml:space="preserve">
    <value>Add Certification</value>
  </data>
  <data name="AddCertificationHeader" xml:space="preserve">
    <value>Add Certification</value>
  </data>
  <data name="AddCertificationHelp" xml:space="preserve">
    <value>Enter the information below to edit a certification in your profile. Example certifications are EMT certs, CPR/BLS, Hazmat, etc. Tracking certifications can be useful to ensure they are updated/renewed before they expire and the department knows who's certified for what. Fields in &lt;span class="required"&gt;blue italics&lt;/span&gt; are required.</value>
  </data>
  <data name="AddScheduledReport" xml:space="preserve">
    <value>Add Scheduled Report</value>
  </data>
  <data name="AddStaffingSchedule" xml:space="preserve">
    <value>Add Staffing Schedule</value>
  </data>
  <data name="CertificationDeleteWarning" xml:space="preserve">
    <value>WARNING: This will permanently delete this certification. Are you sure you want to delete the certification?</value>
  </data>
  <data name="CertificationId" xml:space="preserve">
    <value>ID # \ Cert #</value>
  </data>
  <data name="CertificationIdPlaceholder" xml:space="preserve">
    <value>ID # \ Cert #</value>
  </data>
  <data name="CertificationNamePlaceholder" xml:space="preserve">
    <value>Certification Name</value>
  </data>
  <data name="CertificationsHeader" xml:space="preserve">
    <value>Certifications</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="ChangePasswordHeader" xml:space="preserve">
    <value>Change Password For User</value>
  </data>
  <data name="ChangePasswordInfo" xml:space="preserve">
    <value>Here you can manually change the password for a user in the system. Enter in the new password and confirm it to change it. Passwords must be at least 6 characters in length. Note that Resgrid will not notify the user of this password change. Fields in &lt;span class="required"&gt;blue italics&lt;/span&gt; are required.</value>
  </data>
  <data name="ChangeStaffingTo" xml:space="preserve">
    <value>Change Staffing To</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="ConfirmPasswordPlaceholder" xml:space="preserve">
    <value>Confirm the Password for this User</value>
  </data>
  <data name="DaysOfWeek" xml:space="preserve">
    <value>Days of the Week</value>
  </data>
  <data name="DepartmentCode" xml:space="preserve">
    <value>Department Code</value>
  </data>
  <data name="DepartmentId" xml:space="preserve">
    <value>Department Id</value>
  </data>
  <data name="EditCertificationInfo" xml:space="preserve">
    <value>Enter the information below to edit a certification in your profile. Example certifications are EMT certs, CPR/BLS, Hazmat, etc. Tracking certifications can be useful to ensure they are updated/renewed before they expire and the department knows who's certified for what. Fields in &lt;span class="required"&gt;blue italics&lt;/span&gt; are required.</value>
  </data>
  <data name="EditCertificationsHeader" xml:space="preserve">
    <value>Edit Certification</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Edit Profile</value>
  </data>
  <data name="EditScheduledReportHeader" xml:space="preserve">
    <value>Edit Scheduled Report</value>
  </data>
  <data name="EditStaffingScheduleHeader" xml:space="preserve">
    <value>Edit Staffing Schedule</value>
  </data>
  <data name="EmailUser" xml:space="preserve">
    <value>Email User?</value>
  </data>
  <data name="EmailUserInfo" xml:space="preserve">
    <value>Check this box if you want the user Emailed with their UserName and new Password.</value>
  </data>
  <data name="ExpiresOn" xml:space="preserve">
    <value>Expires On</value>
  </data>
  <data name="ExpiresOnLabel" xml:space="preserve">
    <value>Expires On</value>
  </data>
  <data name="IssuedByLabel" xml:space="preserve">
    <value>Issued By</value>
  </data>
  <data name="IssuedByPlaceholder" xml:space="preserve">
    <value>Issuing Authority name</value>
  </data>
  <data name="IssuedOnLabel" xml:space="preserve">
    <value>Issued On</value>
  </data>
  <data name="JoinDepartment" xml:space="preserve">
    <value>Join Department</value>
  </data>
  <data name="JoinDepartmentHeader" xml:space="preserve">
    <value>Join Department</value>
  </data>
  <data name="JoinDepartmentInfo" xml:space="preserve">
    <value>You need to supply the current Department Id and Code for the Resgrid Department you wish to join.</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NewPasswordPlaceholder" xml:space="preserve">
    <value>New Password for this User</value>
  </data>
  <data name="NewPasswordReq" xml:space="preserve">
    <value>Passwords must be 8 characters or longer and include a digit (number), an uppercase and lowercase letter</value>
  </data>
  <data name="NewScheduledReportHeader" xml:space="preserve">
    <value>New Scheduled Report</value>
  </data>
  <data name="NewStaffingScheduleHeader" xml:space="preserve">
    <value>New Staffing Schedule</value>
  </data>
  <data name="RemoveFromDepartmentWarning" xml:space="preserve">
    <value>WARNING: This will remove you from this department. Are you sure you sure?</value>
  </data>
  <data name="RemoveYourself" xml:space="preserve">
    <value>Remove Yourself From Department</value>
  </data>
  <data name="ReportDeliveryHeader" xml:space="preserve">
    <value>Report Delivery</value>
  </data>
  <data name="ReportDeliverySchedulesHeader" xml:space="preserve">
    <value>Report Delivery Schedules</value>
  </data>
  <data name="ReportToRun" xml:space="preserve">
    <value>Report To Run</value>
  </data>
  <data name="Schedules" xml:space="preserve">
    <value>Schedules</value>
  </data>
  <data name="SetAsActive" xml:space="preserve">
    <value>Set As Active</value>
  </data>
  <data name="SetAsActiveWarning" xml:space="preserve">
    <value>WARNING: This will change your current active department, you can only be logged into one department at a time, are you sure?</value>
  </data>
  <data name="SetAsDefault" xml:space="preserve">
    <value>Set As Default</value>
  </data>
  <data name="SetAsDefaultWarning" xml:space="preserve">
    <value>WARNING: This will change your default department, if you want to view this department you will need to activate it afterwards.</value>
  </data>
  <data name="SpecificDate" xml:space="preserve">
    <value>Specific Date</value>
  </data>
  <data name="SpecificDateTime" xml:space="preserve">
    <value>Specific DateTime</value>
  </data>
  <data name="StaffingSchedule" xml:space="preserve">
    <value>Staffing Schedule</value>
  </data>
  <data name="StaffingSchedulesHeader" xml:space="preserve">
    <value>Staffing Schedule</value>
  </data>
  <data name="TimeToRun" xml:space="preserve">
    <value>Time To Run</value>
  </data>
  <data name="ValidAreaLabel" xml:space="preserve">
    <value>Valid Area</value>
  </data>
  <data name="ValidAreaPlaceholder" xml:space="preserve">
    <value>Area certification in valid in</value>
  </data>
  <data name="YourDepartmentsHeader" xml:space="preserve">
    <value>Your Departments</value>
  </data>
</root>