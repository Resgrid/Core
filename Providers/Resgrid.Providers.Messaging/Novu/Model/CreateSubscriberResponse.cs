using System;
using System.Collections.Generic;

namespace Resgrid.Providers.Messaging.Novu.Model
{
	/// <summary>
	/// Represents a response object.
	/// </summary>
	public class CreateSubscriberResponse
	{
		/// <summary>
		/// The internal ID generated by Novu for your subscriber. This ID does not match the `subscriberId` used in your queries. Refer to `subscriberId` for that identifier.
		/// </summary>
		public string _id { get; set; }

		/// <summary>
		/// The first name of the subscriber.
		/// </summary>
		public string FirstName { get; set; }

		/// <summary>
		/// The last name of the subscriber.
		/// </summary>
		public string LastName { get; set; }

		/// <summary>
		/// The email address of the subscriber.
		/// </summary>
		public string Email { get; set; }

		/// <summary>
		/// The phone number of the subscriber.
		/// </summary>
		public string Phone { get; set; }

		/// <summary>
		/// The URL of the subscriber's avatar image.
		/// </summary>
		public string Avatar { get; set; }

		/// <summary>
		/// The locale setting of the subscriber, indicating their preferred language or region.
		/// </summary>
		public string Locale { get; set; }

		/// <summary>
		/// The identifier used to create this subscriber, which typically corresponds to the user ID in your system.
		/// </summary>
		public string SubscriberId { get; set; }

		/// <summary>
		/// An array of channel settings associated with the subscriber.
		/// </summary>
		public List<ChannelSettingsDto> Channels { get; set; }

		/// <summary>
		/// An array of topics that the subscriber is subscribed to.
		/// </summary>
		[Obsolete("This property is deprecated")]
		public List<string> Topics { get; set; }

		/// <summary>
		/// Indicates whether the subscriber is currently online.
		/// </summary>
		public bool? IsOnline { get; set; }

		/// <summary>
		/// The timestamp indicating when the subscriber was last online, in ISO 8601 format.
		/// </summary>
		public string LastOnlineAt { get; set; }

		/// <summary>
		/// The unique identifier of the organization to which the subscriber belongs.
		/// </summary>
		public string _organizationId { get; set; }

		/// <summary>
		/// The unique identifier of the environment associated with this subscriber.
		/// </summary>
		public string _environmentId { get; set; }

		/// <summary>
		/// Indicates whether the subscriber has been deleted.
		/// </summary>
		public bool Deleted { get; set; }

		/// <summary>
		/// The timestamp indicating when the subscriber was created, in ISO 8601 format.
		/// </summary>
		public string CreatedAt { get; set; }

		/// <summary>
		/// The timestamp indicating when the subscriber was last updated, in ISO 8601 format.
		/// </summary>
		public string UpdatedAt { get; set; }

		/// <summary>
		/// The version of the subscriber document.
		/// </summary>
		public int? __v { get; set; }

		/// <summary>
		/// Additional custom data for the subscriber
		/// </summary>
		public Dictionary<string, object> Data { get; set; }

		/// <summary>
		/// Timezone of the subscriber
		/// </summary>
		public string Timezone { get; set; }
	}

	/// <summary>
	/// Represents channel settings for a subscriber.
	/// </summary>
	public class ChannelSettingsDto
	{
		/// <summary>
		/// The provider identifier for the credentials
		/// </summary>
		public string ProviderId { get; set; }

		/// <summary>
		/// The integration identifier
		/// </summary>
		public string IntegrationIdentifier { get; set; }

		/// <summary>
		/// Credentials payload for the specified provider
		/// </summary>
		public ChannelCredentials Credentials { get; set; }

		/// <summary>
		/// The unique identifier of the integration associated with this channel.
		/// </summary>
		public string _integrationId { get; set; }
	}

	/// <summary>
	/// Represents credentials for a channel.
	/// </summary>
	public class ChannelCredentials
	{
		/// <summary>
		/// Webhook URL used by chat app integrations. The webhook should be obtained from the chat app provider.
		/// </summary>
		public string WebhookUrl { get; set; }

		/// <summary>
		/// Channel specification for Mattermost chat notifications.
		/// </summary>
		public string Channel { get; set; }

		/// <summary>
		/// Contains an array of the subscriber device tokens for a given provider. Used on Push integrations.
		/// </summary>
		public List<string> DeviceTokens { get; set; }

		/// <summary>
		/// Alert UID for Grafana on-call webhook payload.
		/// </summary>
		public string AlertUid { get; set; }

		/// <summary>
		/// Title to be used with Grafana on-call webhook.
		/// </summary>
		public string Title { get; set; }

		/// <summary>
		/// Image URL property for Grafana on-call webhook.
		/// </summary>
		public string ImageUrl { get; set; }

		/// <summary>
		/// State property for Grafana on-call webhook.
		/// </summary>
		public string State { get; set; }

		/// <summary>
		/// Link to upstream details property for Grafana on-call webhook.
		/// </summary>
		public string ExternalUrl { get; set; }
	}
}
