@model Resgrid.Web.Areas.User.Models.Contacts.ViewContactView
@inject IStringLocalizer<Resgrid.Localization.Areas.User.Contacts.Contacts> localizer
@{
    ViewBag.Title = "Resgrid | " + @localizer["ViewContactHeader"];
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox">
        <div class="ibox-title">
            <h5>@Model.Contact.GetName()</h5>
        </div>
        <div class="ibox-content">
            <!-- Tabs Navigation -->
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item active">
                    <a class="nav-link active" data-toggle="tab" href="#details" role="tab">
                        <i class="fa fa-user"></i> @localizer["ContactDetails"]
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#notes" role="tab">
                        <i class="fa fa-sticky-note"></i> @localizer["Notes"]
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#calls" role="tab">
                        <i class="fa fa-phone"></i> @localizer["Calls"]
                    </a>
                </li>
            </ul>

            <!-- Header Cards -->
            <div class="row m-t-sm">
                <div class="col-md-6">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">
                                <i class="fa fa-user"></i> @localizer["ContactDetails"]
                            </h3>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["Name"]:</strong>
                                </div>
                                <div class="col-md-8">@Model.Contact.GetName()</div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["Type"]:</strong>
                                </div>
                                <div class="col-md-8">@Model.Contact.GetTypeName()</div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["Email"]:</strong>
                                </div>
                                <div class="col-md-8">@Model.Contact.Email</div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["CellPhoneLabel"]:</strong>
                                </div>
                                <div class="col-md-8">@Model.Contact.CellPhoneNumber</div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["HomePhoneLabel"]:</strong>
                                </div>
                                <div class="col-md-8">@Model.Contact.HomePhoneNumber</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">
                                <i class="fa fa-info-circle"></i> @localizer["AdditionalInfo"]
                            </h3>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["Category"]:</strong>
                                </div>
                                <div class="col-md-8">@Model.Contact.ContactType</div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["Type"]:</strong>
                                </div>
                                <div class="col-md-8">@Model.Contact.GetTypeName()</div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["CreatedOn"]:</strong>
                                </div>
                                <div class="col-md-8">@Model.Contact.AddedOn.ToString("MM/dd/yyyy HH:mm")</div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <strong>@localizer["CreatedBy"]:</strong>
                                </div>
                                <div class="col-md-8">
                                    @(await UserHelper.GetFullNameForUser(Model.Contact.AddedByUserId))
                                </div>
                            </div>
                            @if (Model.Contact.EditedOn.HasValue)
                            {
                                <div class="row">
                                    <div class="col-md-4">
                                        <strong>@localizer["LastUpdated"]:</strong>
                                    </div>
                                    <div class="col-md-8">
                                        @Model.Contact.EditedOn.Value.ToString("MM/dd/yyyy HH:mm")
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tabs Sections -->
            <div class="row">
                <div class="col-sm-12">
                    <!-- Tab Content -->
                    <div class="tab-content">
                        <!-- Details Tab -->
                        <div class="tab-pane fade in active" id="details" role="tabpanel">
                            <!-- Header Cards -->
                            <div class="row m-t-sm">
                                <div class="col-md-6">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <h3 class="panel-title">
                                                <i class="fa fa-user"></i> @localizer["LocationDetails"]
                                            </h3>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["LocationGpsLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.Contact.LocationGpsCoordinates</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["EntranceGpsLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.Contact.EntranceGpsCoordinates</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["ExitGpsLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.Contact.ExitGpsCoordinates</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["WebsiteLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.Contact.Website</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <h3 class="panel-title">
                                                <i class="fa fa-info-circle"></i> @localizer["SocialsInfo"]
                                            </h3>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["TwitterLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.Contact.Twitter</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["FacebookLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.Contact.Facebook</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["LinkedInLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.Contact.LinkedIn</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["InstagramLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.Contact.Instagram</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row m-t-sm">
                                <div class="col-md-6">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <h3 class="panel-title">
                                                <i class="fa fa-user"></i> @localizer["PhysicalAddressHeader"]
                                            </h3>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["AddressLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.PhysicalAddress?.Address1</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["CityLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.PhysicalAddress?.City</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["StateLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.PhysicalAddress?.State</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["PostalCodeLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.PhysicalAddress?.PostalCode</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["CountryLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.PhysicalAddress?.Country</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <h3 class="panel-title">
                                                <i class="fa fa-info-circle"></i> @localizer["MailingAddressHeader"]
                                            </h3>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["AddressLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.MailingAddress?.Address1</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["CityLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.MailingAddress?.City</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["StateLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.MailingAddress?.State</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["PostalCodeLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.MailingAddress?.PostalCode</div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <strong>@localizer["CountryLabel"]:</strong>
                                                </div>
                                                <div class="col-md-8">@Model.MailingAddress?.Country</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row m-t-sm">
                                <div class="col-md-12">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <h3 class="panel-title">
                                                <i class="fa fa-user"></i> @localizer["DescriptionLabel"]
                                            </h3>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    @Html.Raw(Model.Contact.Description)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row m-t-sm">
                                <div class="col-md-12">
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            <h3 class="panel-title">
                                                <i class="fa fa-info-circle"></i> @localizer["OtherInfoLabel"]
                                            </h3>
                                        </div>
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    @Html.Raw(Model.Contact.OtherInfo)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Notes Tab -->
                        <div class="tab-pane fade" id="notes" role="tabpanel">
                            <div class="row m-t-sm">
                                <div class="col-md-12">
                                    <div class="panel-body">
                                        <!-- Search and filter section -->
                                        <div class="row m-b-sm">
                                            <div class="col-md-6">
                                                <div class="input-group">
                                                    <input type="text" id="notesSearchInput" class="form-control"
                                                           placeholder="@localizer["SearchNotes"]">
                                                    <span class="input-group-btn">
                                                        <button type="button" class="btn btn-primary"
                                                                id="searchNotesBtn">
                                                            <i class="fa fa-search"></i> @localizer["Search"]
                                                        </button>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="input-group">
                                                    <span class="input-group-addon">@localizer["FilterBy"]</span>
                                                    <select id="notesFilterSelect" class="form-control">
                                                        <option value="">@localizer["All"]</option>
                                                        <option value="recent">@localizer["Recent"]</option>
                                                        <option value="oldest">@localizer["Oldest"]</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Loading indicator -->
                                        <div id="notesLoading" class="text-center p-md">
                                            <i class="fa fa-spinner fa-spin fa-3x"></i>
                                            <p>@localizer["LoadingNotes"]</p>
                                        </div>

                                        <!-- Notes container - will be populated by JavaScript -->
                                        <div class="row" id="notesContainer"></div>

                                        <!-- No results message -->
                                        <div id="noNotesFound" class="text-center p-md" style="display: none;">
                                            <h3>
                                                <i class="fa fa-search-minus"></i> @localizer["NoNotesFound"]
                                            </h3>
                                        </div>
                                    </div>

                                    <!-- Add New Note Section -->
                                    @if (ClaimsAuthorizationHelper.CanEditContacts())
                                    {
                                        <div class="row m-t-lg">
                                            <div class="col-md-12 text-center">
                                                <button type="button" class="btn btn-primary btn-lg" data-toggle="modal"
                                                        data-target="#addNoteModal">
                                                    <i class="fa fa-plus-circle"></i> @localizer["AddNewNote"]
                                                </button>
                                            </div>
                                        </div>
                                    }
                                </div>


                            </div>
                        </div>
                        <!-- Calls Tab -->
                        <div class="tab-pane fade" id="calls" role="tabpanel">
                            <div class="row m-t-sm">
                                <div class="col-md-12">
                                    <div class="panel-body">
                                        <!-- Search and filter section -->
                                        <div class="row m-b-sm">
                                            <div class="col-md-6">
                                                <div class="input-group">
                                                    <input type="text" id="callsSearchInput" class="form-control"
                                                           placeholder="@localizer["SearchCalls"]">
                                                    <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="searchCallsBtn">
                                                <i class="fa fa-search"></i> @localizer["Search"]
                                            </button>
                                        </span>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="input-group">
                                                    <span class="input-group-addon">@localizer["SortBy"]</span>
                                                    <select id="callsSortSelect" class="form-control">
                                                        <option value="recent">@localizer["MostRecent"]</option>
                                                        <option value="oldest">@localizer["Oldest"]</option>
                                                        <option value="priority">@localizer["Priority"]</option>
                                                        <option value="number">@localizer["CallNumber"]</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Loading indicator -->
                                        <div id="callsLoading" class="text-center p-md">
                                            <i class="fa fa-spinner fa-spin fa-3x"></i>
                                            <p>@localizer["LoadingCalls"]</p>
                                        </div>

                                        <!-- Calls container - will be populated by JavaScript -->
                                        <div class="row" id="callsContainer"></div>

                                        <!-- No results message -->
                                        <div id="noCallsFound" class="text-center p-md" style="display: none;">
                                            <h3>
                                                <i class="fa fa-search-minus"></i> @localizer["NoCallsFound"]
                                            </h3>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="addNoteModal" tabindex="-1" role="dialog" aria-labelledby="addNoteModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addNoteModalLabel">
                    <i class="fa fa-plus-circle"></i> @localizer["AddNewNote"]
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addNoteForm" asp-controller="Contacts" asp-action="AddNote" asp-route-area="User"
                      method="post">
                    <input type="hidden" name="ContactId" value="@Model.Contact.ContactId"/>

                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label">@localizer["NoteContent"]:</label>
                        <div class="col-sm-10">
                            <div id="note-container" style="width:100%; height: 300px;"></div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label">@localizer["NoteType"]:</label>
                        <div class="col-sm-10">
                            <select name="ContactNoteTypeId" class="form-control">
                                @if (Model.NoteTypes != null)
                                {
                                    @foreach (var type in Model.NoteTypes)
                                    {
                                        <option value="@type.ContactNoteTypeId">@type.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label">@localizer["ExpiresOn"]:</label>
                        <div class="col-sm-10">
                            <div class="input-group date">
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input type="datetime-local" name="ExpiresOn" class="form-control"/>
                            </div>
                            <small class="form-text text-muted">@localizer["LeaveBlankForNoExpiration"]</small>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-2"></div>
                        <div class="col-sm-10">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="shouldAlert" name="ShouldAlert"
                                       value="true">
                                <label class="form-check-label" for="shouldAlert">@localizer["ShouldAlert"]</label>
                            </div>
                            <small class="form-text text-muted">@localizer["ShouldAlertInfo"]</small>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@localizer["Cancel"]</button>
                <button type="button" class="btn btn-primary" id="saveNoteBtn">
                    <i class="fa fa-save"></i> @localizer["SaveNote"]
                </button>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script>
        const contactId = '@Model.Contact.ContactId';

        // Add function to refresh notes container
        function refreshNotesContainer() {
            $.ajax({
                url: resgrid.absoluteBaseUrl + '/User/Contacts/GetNotesJson?contactId=' + contactId,
                type: 'GET',
                success: function (response) {
                    $('#notesContainer').html(response);

                    // Re-bind event handlers to new elements
                    const $noteCards = $('.note-card');

                    // Re-apply search/filters if active
                    if ($('#notesSearchInput').val().trim().length > 0) {
                        searchNotes();
                    }

                    if ($('#notesFilterSelect').val()) {
                        filterNotes();
                    }
                },
                error: function () {
                    toastr.error('Error refreshing notes');
                }
            });
        }

        $(document).ready(function () {
            resgrid.common.analytics.track('Department - View Contact');


            // Load notes when the notes tab is shown
            $('a[data-toggle="tab"][href="#notes"]').on('shown.bs.tab', function (e) {
                loadNotes();
            });

            // Initial load if notes tab is active
            if ($('a[data-toggle="tab"][href="#notes"]').parent().hasClass('active')) {
                loadNotes();
            }

            // Load calls when the calls tab is shown
            $('a[data-toggle="tab"][href="#calls"]').on('shown.bs.tab', function (e) {
                loadCalls();
            });

            // Initial load if calls tab is active
            if ($('a[data-toggle="tab"][href="#calls"]').parent().hasClass('active')) {
                loadCalls();
            }

            // Notes search and filter functionality
            let $noteCards = $('.note-card');
            const $notesContainer = $('#notesContainer');
            const $noNotesFound = $('#noNotesFound');

            // Function to load notes asynchronously
            function loadNotes() {
                $('#notesLoading').show();
                $('#notesContainer').empty();
                $('#noNotesFound').hide();

                $.ajax({
                    url: resgrid.absoluteBaseUrl + '/User/Contacts/GetNotesJson?contactId=' + contactId,
                    type: 'GET',
                    data: {contactId: contactId},
                    dataType: 'json',
                    success: function (data) {
                        $('#notesLoading').hide();

                        if (data && data.length > 0) {
                            renderNotes(data);
                        } else {
                            $('#noNotesFound').show();
                        }

                        // Apply filters if selected
                        if ($('#notesFilterSelect').val()) {
                            filterNotes();
                        }

                        // Apply search if there's a term
                        if ($('#notesSearchInput').val().trim().length > 0) {
                            searchNotes();
                        }
                    },
                    error: function () {
                        $('#notesLoading').hide();
                        toastr.error('Error loading notes');
                    }
                });
            }

            function renderNotes(notes) {
                const $container = $('#notesContainer');

                notes.forEach(function (note) {
                    const $noteCard = $(`
                                                        <div class="col-md-4 note-card" data-date="${note.CreatedOn}">
                                                    <div class="ibox">
                                                                <div class="ibox-content" style="background-color:${note.BackgroundColor}">
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                                    <h4 class="note-title">${note.ContactNoteType}</h4>
                                                                    <p class="small text-muted">
                                                                                <i class="fa fa-clock-o"></i> ${note.CreatedOn}
                                                                                        ${note.CreatedBy ? `| <i class="fa fa-user"></i> ${note.CreatedBy}` : ''}
                                                                    </p>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-md-12 note-content">
                                                                            ${note.Note}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            `);

                    $container.append($noteCard);
                });
            }

            // Search functionality
            function searchNotes() {
                const searchTerm = $('#notesSearchInput').val().toLowerCase();
                $noteCards = $('.note-card');
                let foundCount = 0;

                $noteCards.each(function () {
                    const $card = $(this);
                    const noteTitle = $card.find('.note-title').text().toLowerCase();
                    const noteContent = $card.find('.note-content').text().toLowerCase();

                    if (noteTitle.includes(searchTerm) || noteContent.includes(searchTerm)) {
                        $card.show();
                        foundCount++;
                    } else {
                        $card.hide();
                    }
                });

                if (foundCount === 0) {
                    $noNotesFound.show();
                } else {
                    $noNotesFound.hide();
                }
            }

            // Filter functionality
            function filterNotes() {
                const filterValue = $('#notesFilterSelect').val();
                $noteCards = $('.note-card');
                let notes = $noteCards.toArray();

                if (filterValue === 'recent') {
                    notes.sort((a, b) => {
                        const dateA = $(a).data('date');
                        const dateB = $(b).data('date');
                        return dateB.localeCompare(dateA);
                    });
                } else if (filterValue === 'oldest') {
                    notes.sort((a, b) => {
                        const dateA = $(a).data('date');
                        const dateB = $(b).data('date');
                        return dateA.localeCompare(dateB);
                    });
                }

                $notesContainer.empty();
                $(notes).each(function () {
                    $notesContainer.append(this);
                });

                // Re-apply search if there's a search term
                if ($('#notesSearchInput').val().trim().length > 0) {
                    searchNotes();
                }
            }

            // Event handlers
            $('#searchNotesBtn').on('click', searchNotes);
            $('#notesSearchInput').on('keyup', function (e) {
                if (e.key === 'Enter') {
                    searchNotes();
                }
            });

            $('#notesFilterSelect').on('change', filterNotes);

            // Initialize form components
            let quillNote = new Quill('#note-container', {
                placeholder: '',
                theme: 'snow'
            });

            // Update the existing form submission code in the document.ready function
            $('#saveNoteBtn').on('click', function () {
                // Get the form
                let form = $('#addNoteForm')[0];
                let formData = new FormData(form);

                // Add Quill editor content to form data
                formData.append('Note', quillNote.root.innerHTML);

                // Submit form via AJAX
                $.ajax({
                    url: resgrid.absoluteBaseUrl + '/User/Contacts/AddNote',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        //if (response.success) {
                        // Reset form
                        $('#addNoteForm')[0].reset();
                        quillNote.root.innerHTML = '';

                        // Refresh notes container
                        loadNotes();

                        // Show success message
                        toastr.success('Note added successfully');
                        $('#addNoteModal').modal('hide');
                        //} else {
                        //    toastr.error(response.message || 'Error adding note');
                        //}
                    },
                    error: function (xhr) {
                        toastr.error('Error adding note: ' + (xhr.responseJSON?.message || 'Unknown error'));
                    }
                });

                // Reset form when modal is closed
                $('#addNoteModal').on('hidden.bs.modal', function () {
                    $('#addNoteForm')[0].reset();
                    quillNote.root.innerHTML = '';
                });
            });

            // Calls functionality
            let $callCards = $('.call-card');
            const $callsContainer = $('#callsContainer');
            const $noCallsFound = $('#noCallsFound');

            // Function to load calls asynchronously
            function loadCalls() {
                $('#callsLoading').show();
                $('#callsContainer').empty();
                $('#noCallsFound').hide();

                $.ajax({
                    url: resgrid.absoluteBaseUrl + '/User/Contacts/GetCallsJson?contactId=' + contactId,
                    type: 'GET',
                    data: {contactId: contactId},
                    dataType: 'json',
                    success: function (data) {
                        $('#callsLoading').hide();

                        if (data && data.length > 0) {
                            renderCalls(data);
                        } else {
                            $('#noCallsFound').show();
                        }

                        // Apply sort if selected
                        if ($('#callsSortSelect').val()) {
                            sortCalls();
                        }

                        // Apply search if there's a term
                        if ($('#callsSearchInput').val().trim().length > 0) {
                            searchCalls();
                        }
                    },
                    error: function () {
                        $('#callsLoading').hide();
                        toastr.error('Error loading calls');
                    }
                });
            }

            function renderCalls(calls) {
                const $container = $('#callsContainer');

                calls.forEach(function (call) {
                    // Format the priority badge
                    let priorityClass = 'badge-info';
                    if (call.Priority === 1) priorityClass = 'badge-danger';
                    else if (call.Priority === 2) priorityClass = 'badge-warning';
                    else if (call.Priority === 3) priorityClass = 'badge-primary';
                    else if (call.Priority === 4) priorityClass = 'badge-success';

                    const $callCard = $(`
                                        <div class="col-md-4 call-card" data-date="${call.LoggedOn}" data-priority="${call.Priority}" data-number="${call.Number}">
                                            <div class="ibox">
                                                <div class="ibox-content">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <h4>
                                                                <span class="badge" style="background-color: ${call.PriorityColor}">${call.PriorityName}</span>
                                                                ${call.CallName}
                                                            </h4>
                                                            <p class="small text-muted">
                                                                <i class="fa fa-hashtag"></i> ${call.CallNumber}
                                                                | <i class="fa fa-clock-o"></i> ${call.LoggedOn}
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <p>${call.CallNature || ''}</p>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-12 text-right">
                                                            <a href="${resgrid.absoluteBaseUrl}/User/Dispatch/ViewCall?callId=${call.CallId}" class="btn btn-sm btn-primary">
                                                                <i class="fa fa-eye"></i> View
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    `);

                    $container.append($callCard);
                })
            }

            // Search functionality
            function searchCalls() {
                const searchTerm = $('#callsSearchInput').val().toLowerCase();
                $callCards = $('.call-card');
                let foundCount = 0;

                $callCards.each(function () {
                    const $card = $(this);
                    const cardText = $card.text().toLowerCase();

                    if (cardText.includes(searchTerm)) {
                        $card.show();
                        foundCount++;
                    } else {
                        $card.hide();
                    }
                });

                if (foundCount === 0) {
                    $noCallsFound.show();
                } else {
                    $noCallsFound.hide();
                }
            }

            // Sort functionality
            function sortCalls() {
                const sortValue = $('#callsSortSelect').val();
                $callCards = $('.call-card');
                let calls = $callCards.toArray();

                if (sortValue === 'recent') {
                    calls.sort((a, b) => {
                        const dateA = $(a).data('date');
                        const dateB = $(b).data('date');
                        return dateB.localeCompare(dateA);
                    });
                } else if (sortValue === 'oldest') {
                    calls.sort((a, b) => {
                        const dateA = $(a).data('date');
                        const dateB = $(b).data('date');
                        return dateA.localeCompare(dateB);
                    });
                } else if (sortValue === 'priority') {
                    calls.sort((a, b) => {
                        const priorityA = $(a).data('priority');
                        const priorityB = $(b).data('priority');
                        return priorityA - priorityB; // Lower number = higher priority
                    });
                } else if (sortValue === 'number') {
                    calls.sort((a, b) => {
                        const numA = $(a).data('number');
                        const numB = $(b).data('number');
                        return numA.localeCompare(numB);
                    });
                }

                $callsContainer.empty();
                $(calls).each(function () {
                    $callsContainer.append(this);
                });

                // Re-apply search if there's a search term
                if ($('#callsSearchInput').val().trim().length > 0) {
                    searchCalls();
                }
            }

            // Event handlers
            $('#searchCallsBtn').on('click', searchCalls);
            $('#callsSearchInput').on('keyup', function (e) {
                if (e.key === 'Enter') {
                    searchCalls();
                }
            });

            $('#callsSortSelect').on('change', sortCalls);

        });

    </script>
}
