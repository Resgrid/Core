@using Resgrid.Model
@model Resgrid.Web.Areas.User.Models.Departments.Text.TextSetupModel
@{
	ViewBag.Title = "Resgrid | Text Messaging Settings";
}


<div class="row wrapper border-bottom white-bg page-heading">
	<div class="col-sm-4">
		<h2>Text Messaging Settings</h2>
		<ol class="breadcrumb">
			<li>
				<a asp-controller="Home" asp-action="Dashboard" asp-route-area="User">Home</a>
			</li>
			<li class="active">
				<strong>Text Messaging Settings</strong>
			</li>
		</ol>
	</div>
</div>

<div class="row">
	<div class="col-xs-12">
		<div class="wrapper wrapper-content">
			<div class="ibox float-e-margins">
				<div class="ibox-content">
					<form class="form-horizontal" role="form" asp-controller="Department" asp-action="TextSettings" asp-route-area="User" method="post">

						<div class="row">
							<div class="col-md-8 col-md-offset-1">
								<p>Here you can configure how Resgrid will handle text messages to you department. Resgrid can import dispatches sent via Text Messages and personnel can control Resgrid via text messages as well. Fields in <span class="required">blue italics</span> are required.</p>
								@Html.AntiForgeryToken()
								@Html.HiddenFor(m => m.TextCallType)
								<div asp-validation-summary="All" class="text-danger"></div>

								@if (!String.IsNullOrEmpty(Model.Message))
								{
									<div class="alert alert-success">
										@Model.Message
									</div>
								}
							</div>
						</div>

						@if (!Model.CanProvisionNumber)
						{
							<div class="row">
								<div class="col-md-12">
									<div class="alert alert-danger fade in">
										<button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
										<h4>Wrong Plan</h4>
										<p>Your department's current plan doesn't support inbound Text Messaging. Upgrade your plan to Professional or higher to get this feature.</p>
										<p>
											<a href="@Url.Action("Index", "Subscription", new {Area = "User"})" class="btn btn-success">Upgrade Your Plan</a>
										</p>
									</div>
								</div>
							</div>
						}

@*						<div class="form-group">
							<label class="col-sm-2 control-label">Enable Text to Call</label>
							<div class="col-sm-10">
								<div class="checkbox checkbox-primary">
									<input type="checkbox" class="checkbox checkbox-primary" asp-for="EnableTextToCall">
									<label></label>
								</div>
								<span class="help-block m-b-none">This enables the ability of the department to create calls from text messages</span>
							</div>
						</div>
						<div class="form-group">
							<label class="col-sm-2 control-label">Enable Text Command</label>
							<div class="col-sm-10">
								<div class="checkbox checkbox-primary">
									<input type="checkbox" class="checkbox checkbox-primary" asp-for="EnableTextCommand">
									<label></label>
								</div>
								<span class="help-block m-b-none">This enables the ability of personnel to control Resgrid via text messages</span>
							</div>
						</div>*@
						<div class="form-group">
							<label class="col-sm-2 control-label"></label>
							<div class="col-sm-10">
								<span class="help-block m-b-none"><b>Due to reglatory changes, for example A2P 10DLC, we are unable to send text messages out via department numbers. As such these provisioned numbers are for inbound call creation only.</b></span>
							</div>
						</div>
						<div class="form-group">
							<label class="col-sm-2 control-label">
								Your Inbound SMS/Text Number
							</label>
							<div class="col-sm-10">
								<div class="row">
									<div class="col-md-6">
											@if (Model.CanProvisionNumber && String.IsNullOrWhiteSpace(Model.DepartmentTextToCallNumber))
											{
												<a data-toggle="modal" data-target="#provisionPhoneNumberModal" href="#"><div class="text-primary"><strong>No Phone Number</strong> <small>click to choose number.</small></div></a>
											}
											else if (!String.IsNullOrWhiteSpace(Model.DepartmentTextToCallNumber))
											{
												<div class="text-primary"><strong>@Model.DepartmentTextToCallNumber</strong></div>
											}
											else
											{
												<div class="text-primary"><strong>No Phone Number</strong></div>
											}
									</div>
								</div>
							</div>
						</div>
						<div class="form-group">
							<label class="col-sm-2 control-label">
								Inbound Dispatch Numbers
							</label>
							<div class="col-sm-10">
								@Html.TextBoxFor(m => m.DepartmentTextToCallSourceNumbers, new { @class = "form-control" })
								<span class="help-inline">Separate multiple phone numbers by commas, use an asterisk (*) as a wildcard, for example 1(210)100-***</span>
							</div>
						</div>
						<div class="form-group">
							<label class="col-sm-2 control-label">
								SMS/Text Dispatch Format
							</label>
							<div class="col-sm-10">
								<div id="textTypesListView"></div>
								<div id="textTypesPager" class="k-pager-wrap"></div>
							</div>
						</div>

						<div class="form-group">
							<div class="col-sm-4 col-sm-offset-2">
								<a class="btn btn-white" asp-controller="Home" asp-action="Dashboard" asp-route-area="User">Cancel</a>
								<button class="btn btn-primary" type="submit">Update Text Settings</button>
							</div>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" id="provisionPhoneNumberModal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h4 class="modal-title">Resgrid Text Message Number</h4>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-xs-5">
						<div class="form-group">
							<label class=" control-label required">
								Country (Required)
							</label>
							<div class="controls">
								<select class="input-xlarge" id="country" name="country">
									<option value="" selected="selected">Select Country</option>
									<option value="US">United States</option>
									<option value="CA">Canada</option>
									<option value="GB">United Kingdom</option>
									<option value="AU">Australia</option>
									<option value="IE">Ireland</option>
									<option value="DE">Germany</option>
								</select>
							</div>
						</div>
					</div>
					<div class="col-xs-5">
						<div class="form-group">
							<label class=" control-label">
								Area Code (Optional)
							</label>
							<div class="controls">
								<input type="text" id="areaCode" name="areaCode" class="input-xlarge" />
							</div>
						</div>
					</div>
					<div class="col-xs-2">
						<div class="form-group">
							<label class=" control-label">
								
							</label>
							<div class="controls">
								<button type="button" class="btn btn-primary btn-sm" id="searchNumbers" name="searchNumbers">
									<span class="glyphicon glyphicon-search" aria-hidden="true"></span>
								</button>
							</div>
						</div>
						
					</div>
				</div>


				<table class="table table-bordered table-striped table-hover data-table">
					<thead>
						<tr>
							<th>Phone Number</th>
							<th>&nbsp;</th>
						</tr>
					</thead>
					<tbody id="phoneNumberTableBody"></tbody>
				</table>
			</div>
			<div class="modal-footer">
				<a href="@Url.Action("TextSettings", "Department", new {area = "User"})" class="btn btn-default">Close</a>
			</div>
		</div>
	</div>
</div>

@section Scripts
{
	<script type="text/x-kendo-tmpl" id="textTemplate">
		<div class="product">
			<img src="/images/CallTexts/${Code}.png" alt="${Code} image" />
			<h4>${Name}</h4>
		</div>
	</script>

	<style scoped>
		.product {
			float: left;
			width: 270px;
			height: 60px;
			margin: 5px;
			padding: 5px;
			-moz-box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.15);
			-webkit-box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.15);
			box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.15);
			-webkit-border-radius: 15px;
			-moz-border-radius: 15px;
			border-radius: 15px;
			background-image: none;
			cursor: pointer;
		}

			.product img {
				float: left;
				width: 140px;
				height: 50px;
				-webkit-border-radius: 10px;
				-moz-border-radius: 10px;
				border-radius: 10px;
				margin: 4px 0 0 0;
			}

			.product h4 {
				margin: 0px 0 0 0;
				padding: 20px 2px 10px 10px;
				font-size: 1em;
				float: left;
				max-width: 130px;
				text-transform: uppercase;
			}
		/*.k-state-selected h3
			{
				color: #fff;
				background-color: rgba(0,0,0,0.4);
				-moz-box-shadow: inset 0 0 20px rgba(0,0,0,0.2);
				-webkit-box-shadow: inset 0 0 20px rgba(0,0,0,0.2);
				box-shadow: inset 0 0 20px rgba(0,0,0,0.2);
				-moz-border-radius-topright: 5px;
				-moz-border-radius-bottomright: 5px;
				-webkit-border-top-right-radius: 5px;
				-webkit-border-bottom-right-radius: 5px;
				border-top-right-radius: 5px;
				border-bottom-right-radius: 5px;
			}*/
		.k-listview:after {
			content: ".";
			display: block;
			height: 0;
			clear: both;
			visibility: hidden;
		}

		.k-listview {
			border: 0;
			padding: 0 0 20px 0;
			min-width: 0;
		}
	</style>


	<script src="@Url.Content("~/js/app/internal/department/resgrid.department.textsettings.js")" type="text/javascript"></script>
}
