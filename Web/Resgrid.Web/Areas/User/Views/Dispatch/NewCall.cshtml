@model Resgrid.Web.Areas.User.Models.Calls.NewCallView
@inject IStringLocalizer<Resgrid.Localization.Areas.User.Dispatch.Call> localizer
@{
    ViewBag.Title = "Resgrid | " + @localizer["NewCallHeader"];
    Layout = "~/Areas/User/Views/Shared/_UserLayout.cshtml";
}
@section Styles
{
    <style>
        .select2-close-mask {
            z-index: 2099;
        }

        .select2-dropdown {
            z-index: 3051;
        }

        .alert-icon {
            cursor: pointer;
            font-size: 18px;
            padding-left: 5px;
            vertical-align: middle;
            display: none;
        }
    </style>
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>@localizer["NewCallHeader"]</h2>
        <ol class="breadcrumb">
            <li>
                <a asp-controller="Home" asp-action="Dashboard" asp-route-area="User">@commonLocalizer["HomeModule"]</a>
            </li>
            <li>
                <a asp-controller="Dispatch" asp-action="Dashboard" asp-route-area="User">@commonLocalizer["CallsModule"]</a>
            </li>
            <li class="active">
                <strong>@localizer["NewCallHeader"]</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="btn-group top-page-buttons" style="float:right;padding-right:15px;">
            <div class="buttons-actions">
                <a title="Quick Template" class="btn btn-inverse" data-target="#callQuickTemplateWindow" data-toggle="modal">@localizer["Template"]</a>
                @if (!String.IsNullOrWhiteSpace(Model.NewCallFormData))
                {
                    <a title="Call Form" class="btn btn-info" data-target="#newCallFormWindow" data-toggle="modal">@localizer["CallForm"]</a>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="wrapper wrapper-content">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <form class="form-horizontal" role="form" asp-controller="Dispatch" asp-action="NewCall" asp-route-area="User" method="post" id="newCallForm">

                        <div class="row">
                            <div class="col-md-8 col-md-offset-1">
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(m => m.Latitude)
                                @Html.HiddenFor(m => m.Longitude)
                                @Html.HiddenFor(m => m.Call.ReportingUserId)
                                @Html.HiddenFor(m => m.Call.CallFormData)
                                <div asp-validation-summary="All" class="text-danger"></div>

                                @if (!String.IsNullOrEmpty(Model.Message))
                                {
                                    <div class="alert alert-success">
                                        @Model.Message
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["NameLabel"]</label>
                            <div class="col-sm-10"><input type="text" class="form-control" placeholder="@localizer["NamePlaceholder"]" asp-for="Call.Name"></div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["PrioirtyLabel"]</label>
                            <div class="col-sm-10">@Html.DropDownListFor(m => m.CallPriority, Model.CallPriorities, new { @style = "width: 200px;", tabindex = "2" })</div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["TypeLabel"]</label>
                            <div class="col-sm-10">@Html.DropDownListFor(m => m.Call.Type, Model.CallTypes, new { @style = "width: 200px;", tabindex = "3" })</div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["ReportNameLabel"]</label>
                            <div class="col-sm-10"><input type="text" class="form-control" placeholder="@localizer["ReportNamePlaceholder"]" asp-for="Call.ContactName"></div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["ReportContactLabel"]</label>
                            <div class="col-sm-10"><input type="text" class="form-control" placeholder="@localizer["ReportContactPlaceholder"]" asp-for="Call.ContactNumber"></div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["PrimaryContactLabel"]</label>
                            <div class="col-sm-10">
                                <select asp-for="PrimaryContact" asp-items="Model.ContactsList" style="padding-left: 0; width: 100%;"></select>
                                <span class="input-group-addon">
                                    <i id="primaryNotesIcon" class="fa fa-info-circle text-danger alert-icon" title="Note Alerts"></i>
                                </span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["AdditionalContactLabel"]</label>
                            <div class="col-sm-10">
                                <select asp-for="AdditionalContacts" asp-items="Model.ContactsList" multiple="multiple" style="padding-left: 0; width: 100%;"></select>
                                <span class="input-group-addon">
                                    <i id="additionalNotesIcon" class="fa fa-info-circle text-danger alert-icon" title="Note Alerts"></i>
                                </span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["CallIdentifierLabel"]</label>
                            <div class="col-sm-10"><input type="text" class="form-control" placeholder="@localizer["CallIdentifierPlaceholder"]" asp-for="Call.ExternalIdentifier"></div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["IncidentIdLabel"]</label>
                            <div class="col-sm-10"><input type="text" class="form-control" placeholder="@localizer["IncidentIdPlaceholder"]" asp-for="Call.IncidentNumber"></div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["ReferenceIdLabel"]</label>
                            <div class="col-sm-10"><input type="text" class="form-control" placeholder="@localizer["ReferenceIdPlaceholder"]" asp-for="Call.ReferenceNumber"></div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["CallNatureLabel"]</label>
                            <div class="col-sm-10">
                                <input type="hidden" asp-for="Call.NatureOfCall">

                                <div id="nature-container" style="width:100%; height: 300px;">
                                    @Html.Raw(Model.Call.NatureOfCall)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["NotesLabel"]</label>
                            <div class="col-sm-10">
                                <input type="hidden" asp-for="Call.Notes">

                                <div id="note-container" style="width:100%; height: 300px;">
                                    @Html.Raw(Model.Call.Notes)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["MapPageLabel"]</label>
                            <div class="col-sm-10"><input type="text" class="form-control" placeholder="@localizer["MapPagePlaceholder"]" asp-for="Call.MapPage"></div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["LocationLabel"]</label>
                            <div class="col-sm-10">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="input-group input-group-sm">
                                            <input type="text" class="form-control" placeholder="@localizer["LocationPlaceholder"]" asp-for="Call.Address" name="Call_Address">
                                            <span class="input-group-btn">
                                                <a id="searchButton" href="#" class="btn btn-info">@localizer["FindAddress"]</a>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="col-md-6" style="padding-left: 0px;">
                                        <div class="input-group input-group-sm">
                                            <input type="text" class="form-control" placeholder="what.three.words" asp-for="What3Word" style="width:250px;">
                                            <span class="input-group-btn" style="float: left;">
                                                <a id="findw3wButton" href="#" class="btn btn-info">@localizer["FindW3wLocation"]</a>
                                            </span>
                                        </div>
                                        <span class="help-inline">@localizer["W3wHelp"] <a href="https://what3words.com/about/" target="_blank">@localizer["LearnMore"]</a></span>
                                    </div>
                                </div>
                                <div id="callMap" name="callMap" style="position: relative; width: 90%; height: 500px;"></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["ProtocolsLabel"]</label>
                            <div class="col-sm-10">
                                <table id="protocols" class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th style="max-width: 100px;font-size: 14px;">@commonLocalizer["Code"]</th>
                                            <th style="max-width: 350px;font-size: 14px;">@commonLocalizer["Name"]</th>
                                            <th style="max-width: 350px;font-size: 14px;">@commonLocalizer["Status"]</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["CallLinksLabel"]</label>
                            <div class="col-sm-10">
                                <table id="linkedCalls" class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th style="max-width: 350px;font-size: 14px;">@localizer["Name"]</th>
                                            <th style="max-width: 350px;font-size: 14px;">@localizer["Note"]</th>
                                            <th style="max-width: 350px;font-size: 14px;"><a href="#" class="btn btn-xs btn-info" data-target="#selectCallToLinkModal" data-toggle="modal">@localizer["AddLinkedCall"]</a></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["PersonnelDispatchLabel"]</label>
                            <div class="col-sm-10">
                                <div>
                                    <ul class="nav nav-tabs" role="tablist">
                                        <li role="presentation" class="active"><a href="#personnelTab" aria-controls="home" role="tab" data-toggle="tab">@commonLocalizer["Personnel"]</a></li>
                                        <li role="presentation"><a href="#groupsTab" aria-controls="profile" role="tab" data-toggle="tab">@commonLocalizer["Groups"]</a></li>
                                        <li role="presentation"><a href="#rolesTab" aria-controls="settings" role="tab" data-toggle="tab">@commonLocalizer["Roles"]</a></li>
                                    </ul>
                                    <div class="tab-content" style="height: 600px;">
                                        <div role="tabpanel" class="tab-pane active" id="personnelTab">
                                            <div id="personnelGrid"></div>
                                        </div>
                                        <div role="tabpanel" class="tab-pane" id="groupsTab">
                                            <div id="groupsGrid"></div>
                                        </div>
                                        <div role="tabpanel" class="tab-pane" id="rolesTab">
                                            <div id="rolesGrid"></div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@localizer["UnitsDispatchLabel"]</label>
                            <div class="col-sm-10">
                                <div>
                                    <ul class="nav nav-tabs" role="tablist">
                                        @{
                                            var count = 0;

                                            var ungroupedUnits = Model.Units.Where(x => x.StationGroupId == null);

                                            if (ungroupedUnits != null && ungroupedUnits.Any())
                                            {
                                                @Html.Raw("<li role='presentation' class='active'><a href='#unitsTab0' aria-controls='home' role='tab' data-toggle='tab'>" + @commonLocalizer["Units"] + "</a></li>")
                                                ;
                                                count++;
                                            }


                                            for (var i = 0; i < Model.Groups.Count(); i++)
                                            {
                                                var units = Model.Units.Where(x => x.StationGroupId == Model.Groups[i].DepartmentGroupId);

                                                if (units != null && units.Any())
                                                {
                                                    if (count == 0)
                                                    {
                                                        @Html.Raw("<li role='presentation' class='active'><a href='#unitsTab" + Model.Groups[i].DepartmentGroupId + "' aria-controls='home' role='tab' data-toggle='tab'>" + Model.Groups[i].Name + "</a></li>")
                                                        ;
                                                    }
                                                    else
                                                    {
                                                        @Html.Raw("<li role='presentation'><a href='#unitsTab" + Model.Groups[i].DepartmentGroupId + "' aria-controls='home' role='tab' data-toggle='tab'>" + Model.Groups[i].Name + "</a></li>")
                                                        ;
                                                    }

                                                    count++;
                                                }
                                            }
                                        }
                                    </ul>
                                    <div class="tab-content">
                                        @{
                                            var count2 = 0;

                                            var ungroupedUnits2 = Model.Units.Where(x => x.StationGroupId == null);

                                            if (ungroupedUnits2 != null && ungroupedUnits2.Any())
                                            {
                                                @Html.Raw("<div role='tabpanel' class='tab-pane active' id='unitsTab0'>")
                                                ;
                                                @Html.Raw("<div class='table-responsive'><table class='table table-striped'><thead><tr><th class='span1'><input type='checkbox' id='checkAllUnits0' onChange='resgrid.dispatch.newcall.checkAllUnits(\"unitGroups_0\", this)'/></th><th>" + @commonLocalizer["Name"] + "</th><th>" + @commonLocalizer["Type"] + "</th><th>" + @commonLocalizer["Status"] + "</th></tr></thead><tbody id='unitGroups_0'>")
                                                ;

                                                if (ungroupedUnits2 != null && ungroupedUnits2.Any())
                                                {
                                                    foreach (var u in ungroupedUnits2)
                                                    {
                                                        var unitStatus = Model.UnitStates.FirstOrDefault(x => x.UnitId == u.UnitId);
                                                        var stateText = "Unknown";
                                                        var stateColor = "#000000";
                                                        var stateTextColor = "#FFFFFF";

                                                        if (unitStatus != null)
                                                        {
                                                            var state = await CustomStatesHelper.GetCustomUnitState(unitStatus);

                                                            if (state != null)
                                                            {
                                                                stateText = state.ButtonText;
                                                                stateColor = state.ButtonColor;
                                                                stateTextColor = state.TextColor;
                                                            }
                                                        }

                                                        @Html.Raw("<tr><td><input type='checkbox' id='dispatchUnit_" + u.UnitId + "' name='dispatchUnit_" + u.UnitId + "' /></td><td>" + u.Name + "</td><td>" + u.Type + "</td><td><span class='label label-default' style='color:" + stateTextColor + ";background-color:" + stateColor + ";'>" + stateText + "</span></td></tr>")
                                                        ;
                                                    }
                                                }
                                                @Html.Raw("</tbody></table></div></div>")
                                                ;
                                                count2++;
                                            }

                                            for (var i = 0; i < Model.Groups.Count(); i++)
                                            {
                                                var groupUnits = Model.Units.Where(x => x.StationGroupId == Model.Groups[i].DepartmentGroupId);

                                                if (groupUnits != null && groupUnits.Any())
                                                {
                                                    if (count2 == 0)
                                                    {
                                                        @Html.Raw("<div role='tabpanel' class='tab-pane active' id='unitsTab" + Model.Groups[i].DepartmentGroupId + "'>")
                                                        ;
                                                    }
                                                    else
                                                    {
                                                        @Html.Raw("<div role='tabpanel' class='tab-pane' id='unitsTab" + Model.Groups[i].DepartmentGroupId + "'>")
                                                        ;
                                                    }

                                                    @Html.Raw("<div class='table-responsive'><table class='table table-striped'><thead><tr><th class='span1'><input type='checkbox' id='checkAllUnits" + Model.Groups[i].DepartmentGroupId + "' onChange='resgrid.dispatch.newcall.checkAllUnits(\"unitGroups_" + Model.Groups[i].DepartmentGroupId + "\", this)'/></th><th>" + @commonLocalizer["Name"] + "</th><th>Type</th><th>" + @commonLocalizer["Status"] + "</th></tr></thead><tbody id='unitGroups_" + Model.Groups[i].DepartmentGroupId + "'>")
                                                    ;

                                                    if (groupUnits != null && groupUnits.Any())
                                                    {
                                                        foreach (var u in groupUnits)
                                                        {
                                                            var unitStatus = Model.UnitStates.FirstOrDefault(x => x.UnitId == u.UnitId);
                                                            var stateText = "Unknown";
                                                            var stateColor = "#000000";
                                                            var stateTextColor = "#FFFFFF";

                                                            if (unitStatus != null)
                                                            {
                                                                var state = await CustomStatesHelper.GetCustomUnitState(unitStatus);

                                                                if (state != null)
                                                                {
                                                                    stateText = state.ButtonText;
                                                                    stateColor = state.ButtonColor;
                                                                    stateTextColor = state.TextColor;
                                                                }
                                                            }

                                                            @Html.Raw("<tr><td><input type='checkbox' id='dispatchUnit_" + u.UnitId + "' name='dispatchUnit_" + u.UnitId + "' /></td><td>" + u.Name + "</td><td>" + u.Type + "</td><td><span class='label label-default' style='color:" + stateTextColor + ";background-color:" + stateColor + ";'>" + stateText + "</span></td></tr>")
                                                            ;
                                                        }
                                                    }
                                                    @Html.Raw("</tbody></table></div></div>")
                                                    ;

                                                    count2++;
                                                }
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-4 col-sm-offset-2">
                                <a class="btn btn-white" asp-controller="Dispatch" asp-action="Dashboard" asp-route-area="User">@commonLocalizer["Cancel"]</a>
                                <button class="btn btn-primary" type="submit">@localizer["CreateCall"]</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" id="callQuickTemplateWindow">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">@localizer["SelectCallTemplateHeader"]</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class=" control-label">
                        @localizer["CallTemplatesLabel"]
                    </label>
                    <div class="controls">
                        <select asp-for="CallTemplateId" asp-items="Model.CallTemplates" style="padding-left: 0; width: 100%;"></select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal" aria-hidden="true">@commonLocalizer["Close"]</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true" onclick="resgrid.dispatch.newcall.fillCallTemplate();">@localizer["SetTemplateButton"]</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" id="protocolQuestionWindow">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">@localizer["ProtocolQuestionHeader"]</h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal" aria-hidden="true">@commonLocalizer["Close"]</button>
                <button id="processQuestionAnswers" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true">@commonLocalizer["Process"]</button>
            </div>

        </div>
    </div>
</div>

<div class="modal xl fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" id="newCallFormWindow">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">@localizer["NewCallFormHeader"]</h4>
            </div>
            <div class="modal-body">
                <div id="fb-template"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal" aria-hidden="true">@commonLocalizer["Close"]</button>
                <button id="saveNewCallFrom" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true">@commonLocalizer["Save"]</button>
            </div>

        </div>
    </div>
</div>

<div class="modal xl fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" id="selectCallToLinkModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">@localizer["SelectCallToLinkHeader"]</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class=" control-label">
                        @localizer["SelectCallLabel"]
                    </label>
                    <div class="controls">
                        <select id="selectLinkedCall" style="padding-left: 0; width: 100%;"></select>
                    </div>
                </div>
                <div class="form-group">
                    <label class=" control-label">
                        @localizer["SelectCallNoteLabel"]
                    </label>
                    <div class="controls">
                        <input type="text" id="selectCallNote" name="selectCallNote" style="padding-left: 0; width: 100%;" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal" aria-hidden="true">@commonLocalizer["Close"]</button>
                <button id="addNewLinkedCall" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true">@localizer["AddLinkedCall"]</button>
            </div>

        </div>
    </div>
</div>

<!-- Alert Notes Modal -->
<div class="modal fade" id="alertNotesModal" tabindex="-1" role="dialog" aria-labelledby="alertNotesModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="alertNotesModalLabel">@localizer["AlertNotesHeader"]</h4>
            </div>
            <div class="modal-body">
                <!-- Alert notes will be injected here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@commonLocalizer["Close"]</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="https://maps.googleapis.com/maps/api/js?key=@Resgrid.Config.MappingConfig.GoogleMapsJSKey"></script>
    <script src="@Url.Content("~/lib/formBuilder/dist/form-render.min.js")" type="text/javascript"></script>

    <script type="text/javascript">
        var newCallFormData = '@Html.Raw(Model.NewCallFormData)';
        var osmTileUrl = '@Resgrid.Config.MappingConfig.GetWebsiteOSMUrl()';
        var osmTileAttribution = '@Resgrid.Config.MappingConfig.LeafletAttribution';
    </script>

    @if (Model.CenterCoordinates != null && Model.CenterCoordinates.Latitude.HasValue && Model.CenterCoordinates.Longitude.HasValue)
    {
        <script type="text/javascript">
            var centerLat = @(Model.CenterCoordinates.Latitude.Value);
            var centerLng = @(Model.CenterCoordinates.Longitude.Value);
            var newCallFormData = '@Html.Raw(Model.NewCallFormData)';
        </script>
    }

    <script src="~/js/app/internal/dispatch/resgrid.dispatch.newcall.js"></script>

    <script type="text/javascript">
        // Function to call the GetAlertNotesForContact endpoint and show modal if notes exist.
        function checkAlertNotes(contactId, iconSelector) {
            if (contactId) {
                $.ajax({
                    url: resgrid.absoluteBaseUrl + "/User/Dispatch/GetAlertNotesForContact",
                    type: "GET",
                    data: { contactId: contactId },
                    success: function(response) {
                        if (response) {
                            $(iconSelector).show();
                            var notesHtml = "";
                            if ($.isArray(response)) {
                                $.each(response, function(i, note) {

                                     notesHtml +=`
                                                        <div class="note-card">
                                                    <div class="ibox">
                                                                <div class="ibox-content" style="background-color:${note.TypeColor}">
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                                    <h4 class="note-title">${note.TypeName ? note.TypeName : ""}</h4>
                                                                    <p class="small text-muted">
                                                                                <i class="fa fa-clock-o"></i> ${note.AddedOn}
                                                                                        ${note.AddedBy ? `| <i class="fa fa-user"></i> ${note.AddedBy}` : ''}
                                                                    </p>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-md-12 note-content">
                                                                            ${note.Note}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            `;

                                    // notesHtml += '<div class="card mb-2">';
                                    // notesHtml += `  <div class="card-header">Note from ${note.AddedBy} (${note.AddedOn})</div>`;

                                    // if (note.TypeColor)
                                    // {
                                    //     notesHtml += `  <div class="card-body" style="background-color: rgba(${note.TypeColor}, 0.1)">`;
                                    // }
                                    // else
                                    // {
                                    //     notesHtml += '  <div class="card-body">';
                                    // }
                                    // notesHtml += `    <p class="card-text">${note.Note}</p>`;
                                    // notesHtml += '  </div>';
                                    // notesHtml += '</div>';
                                });
                            }

                            $("#alertNotesModal .modal-body").html(notesHtml);
                            
                            $("#alertNotesModal").modal("show");
                        } else {
                            $(iconSelector).hide(); // no notes—hide the icon
                        }
                    },
                    error: function() {
                       
                    }
                });
            }
        }

        $(document).ready(function () {
            // Listen for changes on the PrimaryContact select.
            $("#PrimaryContact").on("change", function () {
                var contactId = $(this).val();
                checkAlertNotes(contactId, "#primaryNotesIcon");
            });

            // Listen for changes on the AdditionalContacts select.
            $("#AdditionalContacts").on("change", function () {
                // For multiple selection, you can check for one or more selected contacts.
                // Here we use the first selected contact as an example.
                var contactId = $(this).val();
                if (contactId && contactId.length) {
                    checkAlertNotes(contactId[0], "#additionalNotesIcon");
                } else {
                    $("#additionalNotesIcon").hide();
                }
            });

            // Clicking the icons re-shows the alert notes modal if it’s already loaded.
            $("#primaryNotesIcon, #additionalNotesIcon").on("click", function () {
                $("#alertNotesModal").modal("show");
            });
        });
    </script>
}
