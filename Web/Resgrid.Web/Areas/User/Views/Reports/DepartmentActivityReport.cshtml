@using Resgrid.Model.Helpers
@using Resgrid.Web
@using Resgrid.Web.Helpers
@model Resgrid.Web.Areas.User.Models.Reports.Activity.DepartmentActivityView
@{
	Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
	<title>YTD Department Activity Report</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="description" content="Department Activity Report">
	<meta name="author" content="Resgrid">

	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
				crossorigin="anonymous"
				asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
				asp-fallback-test-class="hidden"
				asp-fallback-test-property="visibility" asp-fallback-test-value="hidden" />

	<link rel="stylesheet" href="~/clib/kendo/styles/kendo.common.min.css" />
	<link rel="stylesheet" href="~/clib/kendo/styles/kendo.bootstrap.min.css" />
	<link rel="stylesheet" href="~/clib/kendo/styles/kendo.dataviz.min.css" />
	<link rel="stylesheet" href="~/clib/kendo/styles/kendo.dataviz.bootstrap.min.css" />

	<style>
		.table th, .table td {
			padding: 8px !important;
			line-height: 20px !important;
			text-align: left !important;
			vertical-align: top !important;
		}
	</style>

	<!--[if lt IE 9]>
		<script src="https://html5shim.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->

	<link rel="shortcut icon" href="@Url.Content("~/favicon.ico")" />
	<link rel="apple-touch-icon" href="@Url.Content("~/apple-touch-icon-iphone.png")" />
	<link rel="apple-touch-icon" sizes="72x72" href="@Url.Content("~/apple-touch-icon-ipad.png")" />
	<link rel="apple-touch-icon" sizes="114x114" href="@Url.Content("~/apple-touch-icon-iphone4.png")" />
	<link rel="apple-touch-icon" sizes="144x144" href="@Url.Content("~/apple-touch-icon-ipad3.png")" />
</head>
<body>
	<div class="content">
		<div class="row">
			<div class="col-md-4 col-md-offset-1">
				<img src="@Url.Content("~/images/Resgrid_JustText_small.png")" title="Resgrid Logo" style="margin-top: 10px; margin-bottom: 5px;">
			</div>
			<div class="col-md-6" style="text-align: right;">
				<h3 style="margin-top: 10px;">YTD Department Activity Report</h3>
			</div>
		</div>
		<div class="row">
			<div class="col-md-10 col-md-offset-1">
				<h4>Calls</h4>
			</div>
		</div>
		<div class="row">
			<div class="col-md-5 col-md-offset-1">
				<table class="table table-condensed">
					<thead>
						<tr>
							<th>Type</th>
							<th>Count</th>
							<th>%</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var callType in Model.CallTypeCount.OrderBy(x => x.Item1))
						{
							if (callType.Item1 != "Total")
							{
								<tr>
									<td style="padding-left: 10px;">@callType.Item1</td>
									<td>@callType.Item2</td>
									<td>
										@{
								float precent = (callType.Item2 * 100f) / Model.TotalCalls;
										}
										@Html.Raw(string.Format("{0}%", precent.ToString("F")))
									</td>
								</tr>
							}
						}

						<tr>
							<td style="padding-left: 10px;">@Model.CallTypeCount.Single(x => x.Item1 == "Total").Item1</td>
							<td>@Model.CallTypeCount.Single(x => x.Item1 == "Total").Item2</td>
							<td></td>
						</tr>
					</tbody>
				</table>
			</div>
			<div class="col-md-5">
				<div id="calls-per-week-ytd"></div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-10 col-md-offset-1">
				<h4>Personnel Response Detail</h4>
			</div>
		</div>
		<div class="row">
			<div class="col-md-10 col-md-offset-1">
				<table class="table table-condensed">
					<thead>
						<tr>
							<th>ID</th>
							<th>Name</th>
							<th>Group</th>
							<th>Dispatched</th>

							@foreach (var callType in Model.CallTypeCount.OrderBy(x => x.Item1))
							{
								if (callType.Item1 != "Total")
								{
									<th>@callType.Item1</th>
								}
							}
						</tr>
					</thead>
					<tbody>
						@foreach (var response in Model.Responses)
						{
							<tr>
								<td style="padding-left: 10px;">@response.ID</td>
								<td>@response.Name</td>
								<td>@response.Group</td>
								<td>@response.TotalCalls</td>


								@foreach (var type in response.CallTypeCount.OrderBy(x => x.Item1))
								{
									<td>@type.Item2</td>
								}
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		<div class="row">
			<div class="col-md-10 col-md-offset-1">
				<h4>Trainings</h4>
			</div>
		</div>
		<div class="row">
			<div class="col-md-5 col-md-offset-1">
				<table class="table table-condensed">
					<thead>
						<tr>
							<th></th>
							<th></th>
							<th></th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>
								<strong><small>January</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 1) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 1).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
							<td>
								<strong><small>February</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 2) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 2).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
							<td>
								<strong><small>March</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 3) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 3).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
						</tr>
						<tr>
							<td>
								<strong><small>April</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 4) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 4).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
							<td>
								<strong><small>May</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 5) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 5).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
							<td>
								<strong><small>June</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 6) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 6).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
						</tr>
						<tr>
							<td>
								<strong><small>July</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 7) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 7).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
							<td>
								<strong><small>August</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 8) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 8).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
							<td>
								<strong><small>September</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 9) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 9).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
						</tr>
						<tr>
							<td>
								<strong><small>October</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 10) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 10).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
							<td>
								<strong><small>November</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 11) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 11).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
							<td>
								<strong><small>December</small></strong>
								<span style="display: block;">
									@if (Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 12) != null)
									{
										@Html.Raw(Model.TrainingMonthCount.FirstOrDefault(x => x.Item1 == 12).Item2)
									}
									else
									{
										@Html.Raw(0)
									}
								</span>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
			<div class="col-md-5">
				<div id="training-per-month-ytd"></div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-10 col-md-offset-1">
				<h4>Personnel Training Detail</h4>
			</div>
		</div>
		<div class="row">
			<div class="col-md-10 col-md-offset-1">
				<table class="table table-condensed">
					<thead>
						<tr>
							<th>ID</th>
							<th>Name</th>
							<th>Group</th>
							<th>Total</th>
							<th>Attended</th>
							<th>%</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var training in Model.Trainings)
						{
							<tr>
								<td style="padding-left: 10px;">@training.ID</td>
								<td>@training.Name</td>
								<td>@training.Group</td>
								<td>@training.Total</td>
								<td>@training.Attended</td>
								<td>

									@if (training.Attended > 0 && training.Total > 0)
									{
										float trainingPrecent = (training.Attended*100f)/training.Total;
										@Html.Raw(string.Format("{0}%", trainingPrecent.ToString("F")))
									}
									else
									{
										<span>0</span>
									}
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		<div class="row">
			<div class="col-md-10 col-md-offset-1" style="text-align: right;">
				@Model.RunOn.FormatForDepartment(Model.Department)
			</div>
		</div>
	</div>

	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.3/jquery.min.js"></script>
	<script> window.jQuery || document.write('<script src="~/Scripts/kendo/jquery.min.js"><\/script>')</script>

	<!-- Latest compiled and minified JavaScript -->
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" crossorigin="anonymous"></script>


	<script src="~/clib/flot/jquery.flot.js"></script>
	<script src="~/clib/flot/jquery.flot.tooltip.min.js"></script>
	<script src="~/clib/flot/jquery.flot.resize.js"></script>
	<script src="~/clib/flot/jquery.flot.pie.js"></script>
	<script src="~/clib/flot/jquery.flot.time.js"></script>
	<script src="~/clib/flot/jquery.flot.spline.js"></script>

	<script src="~/clib/kendo/js/kendo.all.min.js"></script>
	<script src="~/clib/kendo/js/kendo.timezones.min.js"></script>

	<script>
		$(document).ready(function () {
			$("#calls-per-week-ytd").kendoChart({
				dataSource: {
					transport: {
						read: {
							url: "@Url.Action("CallsYTD", "Dispatch", new {Area = "User"})",
							dataType: "json"
						}
					},
					sort: {
						field: "WeekNumber",
						dir: "asc"
					}
				},
				title: { text: "Calls Per Week" },
				transitions: false,
				theme: "Bootstrap",
				legend: {
					position: "bottom"
				},
				chartArea: {
					margin: {
						top: 10,
						right: 5,
						bottom: 0,
						left: 10
					},
					height: 240,
					background: "transparent"
				},
				seriesDefaults: {
					type: "verticalBullet",
					style: "smooth",
					stack: true,
					//width: 2,
					markers: {
						//visible: false
					}
				},
				series: [{
					type: "column",
					field: "Count"//,
					//name: "Week #"
				}],
				categoryAxis: {
					field: "WeekNumber",
					labels: {
						visible: true
					},
					majorGridLines: {
						visible: false
					},
					categories: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18",
											 "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35",
											 "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52"]
				},
				tooltip: {
					visible: false//,
					//template: "#= series.name # <br /> #= category #: #= value #"
				}
			});

			$("#training-per-month-ytd").kendoChart({
				dataSource: {
					transport: {
						read: {
							url: "@Url.Action("TrainingPerMonth", "Logs", new { Area = "User" })",
							dataType: "json"
						}
					},
					sort: {
						field: "MonthNumber",
						dir: "asc"
					}
				},
				title: { text: "Training Per Month" },
				transitions: false,
				theme: "Bootstrap",
				legend: {
					position: "bottom"
				},
				chartArea: {
					margin: {
						top: 10,
						right: 5,
						bottom: 0,
						left: 10
					},
					height: 240,
					background: "transparent"
				},
				seriesDefaults: {
					type: "verticalBullet",
					style: "smooth",
					stack: true,
					//width: 2,
					markers: {
						//visible: false
					}
				},
				series: [{
					type: "column",
					field: "Count"//,
					//name: "Week #"
				}],
				categoryAxis: {
					field: "Month",
					labels: {
						visible: true
					},
					majorGridLines: {
						visible: false
					}//,
					//categories: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18",
					//						 "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35",
					//						 "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52"]
				},
				tooltip: {
					visible: false//,
					//template: "#= series.name # <br /> #= category #: #= value #"
				}
			});
		});
	</script>

</body>
</html>
