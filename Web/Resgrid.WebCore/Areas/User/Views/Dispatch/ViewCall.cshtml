@using System.Drawing
@using System.Globalization
@using Resgrid.Model.Helpers
@using Resgrid.Web.Helpers
@model Resgrid.Web.Areas.User.Models.Calls.ViewCallView
@inject IStringLocalizer<Resgrid.Localization.Areas.User.Dispatch.Call> localizer
@{
    ViewBag.Title = $"Resgrid | " + @localizer["ViewCallHeader"] + ": " + @Model.Call.Name;
    Layout = "~/Areas/User/Views/Shared/_UserLayout.cshtml";
}
@section Styles
    {
    <link rel="stylesheet" href="~/lib/jplayer/dist/skin/blue.monday/css/jplayer.blue.monday.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/jquery.slick/1.6.0/slick.css" />
    <link rel="stylesheet" href="https://cdn.plyr.io/3.3.22/plyr.css" />
}

    @Html.HiddenFor(m => m.Latitude)
    @Html.HiddenFor(m => m.Longitude)

    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-sm-4">
            <h2>@localizer["ViewCallHeader"]</h2>
            <ol class="breadcrumb">
                <li>
                    <a asp-controller="Home" asp-action="Dashboard" asp-route-area="User">@commonLocalizer["HomeModule"]</a>
                </li>
                <li>
                    <a asp-controller="Dispatch" asp-action="Dashboard" asp-route-area="User">@commonLocalizer["CallsModule"]</a>
                </li>
                <li class="active">
                    <strong>@localizer["ViewCallHeader"]</strong>
                </li>
            </ol>
        </div>
        <div class="col-sm-8">
            <div class="btn-group top-page-buttons" style="float:right;padding-right:15px;">
                <div class="buttons-actions">
                    @if (ClaimsAuthorizationHelper.CanCreateCall() && Model.Call.State != 0)
                {
                    <button class="btn btn-danger" onclick="resgrid.dispatch.viewcall.reOpenCall();">@localizer["ReopenCall"]</button>
                }
                @if (ClaimsAuthorizationHelper.CanCreateCall())
                {
                    <a class="btn btn-primary" asp-controller="Dispatch" asp-action="UpdateCall" asp-route-area="User" asp-route-callId="@Model.Call.CallId">@localizer["UpdateCallHeader"]</a>
                    <a style="text-decoration:none;" class="btn btn-warning" asp-controller="Dispatch" asp-action="CloseCall" asp-route-area="User" asp-route-callId="@Model.Call.CallId">@localizer["CloseCallHeader"]</a>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="wrapper wrapper-content animated fadeInUp">
            <div class="ibox">
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="m-b-md">
                                <a asp-controller="Dispatch" asp-action="CallExport" asp-route-area="User" asp-route-callId="@Model.Call.CallId" class="btn btn-info btn-xs pull-right">Print (Export) View</a>
                                <h2>@Model.Call.Name</h2>
                            </div>
                            <dl class="dl-horizontal" style="margin-bottom: 0px;">
                                <dt>Status:</dt>
                                <dd>
                                    @if (Model.Call.State == (int)CallStates.Active)
                                    {
                                        <span style="display: block; color: green;">@commonLocalizer["Active"]</span>
                                    }
                                    else if (Model.Call.State == (int)CallStates.Cancelled)
                                    {
                                        <span style="display: block; color: gray;">@commonLocalizer["Canceled"]</span>
                                    }
                                    else if (Model.Call.State == (int)CallStates.Closed)
                                    {
                                        <span style="display: block; color: black;">@commonLocalizer["Closed"]</span>
                                    }
                                    else if (Model.Call.State == (int)CallStates.Unfounded)
                                    {
                                        <span style="display: block; color: blue;">@commonLocalizer["Unfounded"]</span>
                                    }
                                </dd>
                            </dl>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-5">
                            <dl class="dl-horizontal">
                                <dt>@commonLocalizer["Number"]:</dt>
                                <dd>@Model.Call.Number</dd>
                                <dt>@commonLocalizer["Type"]:</dt>
                                <dd>
                                    @if (!String.IsNullOrWhiteSpace(Model.Call.Type))
                                    {
                                        <span style="display: block;">@Model.Call.Type</span>
                                    }
                                    else
                                    {
                                        <span style="display: block;">No Type</span>
                                    }
                                </dd>
                                <dt>@commonLocalizer["Priority"]:</dt>
                                <dd><span style="display: block;">@(((CallPriority)Model.Call.Priority).ToString())</span></dd>
                                <dt>@localizer["LocationLabel"]:</dt>
                                <dd>@Model.Call.Address</dd>
                            </dl>
                        </div>
                        <div class="col-lg-7" id="cluster_info">
                            <dl class="dl-horizontal">
                                <dt>@localizer["IncidentIdLabel"]:</dt>
                                <dd>@Model.Call.IncidentNumber</dd>
                                <dt>@localizer["CallIdentifierLabel"]:</dt>
                                <dd>@Model.Call.ExternalIdentifier</dd>
                                <dt>@localizer["ReferenceIdLabel"]:</dt>
                                <dd>@Model.Call.ReferenceNumber</dd>
                                <dt>@localizer["LoggedByLabel"]:</dt>
                                <dd>@(await UserHelper.GetFullNameForUser(Model.Call.ReportingUserId))</dd>
                                <dt>@localizer["LoggedOnLabel"]:</dt>
                                <dd>@Model.Call.LoggedOn.TimeConverterToString(Model.Department)</dd>
                                @if (Model.Call.ClosedOn.HasValue)
                                {
                                    <dt>@localizer["ClosedByLabel"]:</dt>
                                    <dd>@(await UserHelper.GetFullNameForUser(Model.Call.ClosedByUserId))</dd>
                                    <dt>@localizer["ClosedOnLabel"]:</dt>
                                    <dd>@Model.Call.ClosedOn.Value.TimeConverterToString(Model.Department)</dd>
                                }
                                else
                                {
                                    <dt>@localizer["ClosedByLabel"]:</dt>
                                    <dd>N/A</dd>
                                    <dt>@localizer["ClosedOnLabel"]:</dt>
                                    <dd>N/A</dd>
                                }
                            </dl>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <dl class="dl-horizontal">
                                <dt>@localizer["CallNatureLabel"]:</dt>
                                <dd>
                                    @Html.Raw(Model.Call.NatureOfCall)
                                </dd>
                            </dl>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <dl class="dl-horizontal">
                                <dt>@localizer["NotesLabel"]:</dt>
                                <dd>
                                    @Html.Raw(Model.Call.Notes)
                                </dd>
                            </dl>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <dl class="dl-horizontal">
                                <dt>@localizer["CompletedNotesLabel"]:</dt>
                                <dd>
                                    @Html.Raw(Model.Call.CompletedNotes)
                                </dd>
                            </dl>
                        </div>
                    </div>
                    <div class="row m-t-sm">
                        <div class="col-lg-12">
                            <div class="panel blank-panel">
                                <div class="panel-heading">
                                    <div class="panel-options">
                                        <ul class="nav nav-tabs">
                                            <li class="@Model.IsMapTabActive()"><a href="#tab-1" data-toggle="tab" aria-expanded="false">@commonLocalizer["Map"]</a></li>
                                            <li class="@Model.IsDispatchTabActive()"><a href="#tab-2" data-toggle="tab" aria-expanded="true">@commonLocalizer["Dispatched"]</a></li>
                                            <li class=""><a href="#tab-3" data-toggle="tab" aria-expanded="false">@localizer["PersonnelActivityLabel"]</a></li>
                                            <li class=""><a href="#tab-4" data-toggle="tab" aria-expanded="false">@localizer["UnitActivityLabel"]</a></li>
                                            <li class=""><a href="#tab-5" data-toggle="tab" aria-expanded="false">@commonLocalizer["Images"]</a></li>
                                            <li class=""><a href="#tab-7" data-toggle="tab" aria-expanded="false">@commonLocalizer["Files"]</a></li>
                                            <li class=""><a href="#tab-6" data-toggle="tab" aria-expanded="false">@commonLocalizer["Notes"]</a></li>
                                            <li class=""><a href="#tab-8" data-toggle="tab" aria-expanded="false">@commonLocalizer["Protocols"]</a></li>
                                            <li class=""><a href="#tab-9" data-toggle="tab" aria-expanded="false">@localizer["LinkedCalls"]</a></li>
                                            @if (!String.IsNullOrWhiteSpace(Model.Call.CallFormData))
                                            {
                                                <li class=""><a href="#tab-10" data-toggle="tab" aria-expanded="false">@localizer["CallFormLabel"]</a></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <div class="tab-content">
                                        <div class="tab-pane @Model.IsMapTabActive()" id="tab-1">
                                            <div id="callMap" name="callMap" style="position: relative; width: 500px; height: 500px;"></div>
                                        </div>
                                        <div class="tab-pane @Model.IsDispatchTabActive()" id="tab-2">
                                            <table class="table table-bordered table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>

                                                        </th>
                                                        <th>

                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var g in Model.Groups)
                                                    {
                                                        var unitsForGroup = Model.Units.Where(x => x.StationGroupId == g.DepartmentGroupId);


                                                        var sortedUsers = from u in g.Members
                                                                          let name = Model.UserGroupRoles.FirstOrDefault(x => x.UserId == u.UserId).Name
                                                                          orderby name ascending
                                                                          select new
                                                                          {
                                                                              Name = name,
                                                                              User = u
                                                                          };
                                                        <tr>
                                                            <td colspan="2"><b>@g.Name</b></td>
                                                        </tr>

                                                        if (unitsForGroup != null && unitsForGroup.Any())
                                                        {
                                                            foreach (var unit in unitsForGroup)
                                                            {
                                                                if (Model.Call.HasUnitBeenDispatched(unit.UnitId))
                                                                {
                                                                    <tr>
                                                                        <td>@unit.Name</td>
                                                                        <td>@unit.Type</td>
                                                                    </tr>
                                                                }
                                                            }
                                                        }


                                                        foreach (var u in sortedUsers)
                                                        {
                                                            if (Model.Call.HasUserBeenDispatched(u.User.UserId))
                                                            {
                                                                <tr>
                                                                    <td></td>
                                                                    <td>@u.Name</td>
                                                                </tr>
                                                            }
                                                        }

                                                        if (Model.Call.GroupDispatches != null && Model.Call.GroupDispatches.Any())
                                                        {
                                                            var isGroupDispatched = Model.Call.GroupDispatches.FirstOrDefault(x => x.DepartmentGroupId == g.DepartmentGroupId);

                                                            if (isGroupDispatched != null)
                                                            {
                                                                <tr>
                                                                    <td>All of @g.Name Dispatched</td>
                                                                    <td>(Group Selected)</td>
                                                                </tr>
                                                            }
                                                        }
                                                    }

                                                    @{


                                                        var sortedUngroupedUsers = from u in Model.UnGroupedUsers
                                                                                   let name = Model.UserGroupRoles.FirstOrDefault(x => x.UserId == u.UserId).Name
                                                                                   orderby name ascending
                                                                                   select new
                                                                                   {
                                                                                       Name = name,
                                                                                       User = u
                                                                                   };
                                                    }

                                                    <tr>
                                                        <td colspan="2"><b>Ungrouped Users\Units</b></td>
                                                    </tr>
                                                    @{
                                                        var units = Model.Units.Where(x => x.StationGroupId == null);

                                                        if (units != null && units.Any())
                                                        {
                                                            foreach (var unit in units)
                                                            {
                                                                if (Model.Call.HasUnitBeenDispatched(unit.UnitId))
                                                                {
                                                                    <tr>
                                                                        <td>@unit.Name</td>
                                                                        <td>@unit.Type</td>
                                                                    </tr>
                                                                }
                                                            }
                                                        }
                                                    }
                                                    @foreach (var u in sortedUngroupedUsers)
                                                    {
                                                        if (Model.Call.HasUserBeenDispatched(u.User.UserId))
                                                        {
                                                            <tr>
                                                                <td></td>
                                                                <td>@u.Name</td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="tab-pane" id="tab-3">
                                            <table class="table table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>@commonLocalizer["Timestamp"]</th>
                                                        <th>@commonLocalizer["Status"]</th>
                                                        <th>@commonLocalizer["Name"]</th>
                                                        <th>@commonLocalizer["Group"]</th>
                                                        <th>@commonLocalizer["Note"]</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var al in Model.ActionLogs)
                                                    {
                                                        var customState = await CustomStatesHelper.GetCustomPersonnelStatus(Model.Department.DepartmentId, al);
                                                        var userInfo = Model.UserGroupRoles.FirstOrDefault(x => x.UserId == al.UserId);

                                                        <tr>
                                                            <td>
                                                                @al.Timestamp.TimeConverterToString(Model.Department)
                                                            </td>
                                                            <td>
                                                                @if (al.ActionTypeId <= 25)
                                                                {
                                                                    <span class='label @customState.ButtonColor'>@customState.ButtonText</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class='label label-default' style="color: @customState.TextColor; background-color: @customState.ButtonColor;">@customState.ButtonText</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (userInfo != null)
                                                                {
                                                                    <span>@userInfo.Name</span>
                                                                }
                                                                else
                                                                {
                                                                    <span>@(await UserHelper.GetFullNameForUser(al.UserId))</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (userInfo != null)
                                                                {
                                                                    <span>@userInfo.DepartmentGroupName</span>
                                                                }
                                                                else
                                                                {
                                                                    <span></span>
                                                                }
                                                            </td>
                                                            <td>
                                                                <p class="small">
                                                                    @Html.Raw(al.Note)
                                                                </p>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="tab-pane" id="tab-4">
                                            <table class="table table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>@commonLocalizer["Timestamp"]</th>
                                                        <th>@commonLocalizer["Status"]</th>
                                                        <th>@commonLocalizer["Name"]</th>
                                                        <th>@commonLocalizer["Group"]</th>
                                                        <th>@commonLocalizer["Note"]</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var us in Model.UnitStates)
                                                    {
                                                        var customState = await CustomStatesHelper.GetCustomUnitState(us);

                                                        <tr>
                                                            <td>@us.Timestamp.TimeConverterToString(Model.Department)</td>
                                                            <td>
                                                                @if (us.State <= 25)
                                                                {
                                                                    <span class='label @customState.ButtonColor'>@customState.ButtonText</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class='label label-default' style="color: @customState.TextColor; background-color: @customState.ButtonColor;">@customState.ButtonText</span>
                                                                }
                                                            </td>
                                                            <td>@us.Unit.Name</td>
                                                            <td>
                                                                @if (us.Unit.StationGroup != null)
                                                                {
                                                                    @us.Unit.StationGroup.Name
                                                                }
                                                            </td>
                                                            <td>
                                                                <p class="small">
                                                                    @Html.Raw(us.Note)
                                                                </p>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="tab-pane" id="tab-7">
                                            <table class="table table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>@commonLocalizer["Type"]</th>
                                                        <th>@localizer["FileName"]</th>
                                                        <th>@localizer["FileType"]</th>
                                                        <th>@commonLocalizer["Timestamp"]</th>
                                                        <th><a style="text-decoration:none;" class="btn btn-xs btn-primary" href="@Url.Action("Upload", "Files", new {area = "User", type = 1, resourceId = Model.Call.CallId})">@localizer["AddFile"]</a></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var file in Model.Call.Attachments.Where(x => x.CallAttachmentType == 1 || x.CallAttachmentType == 3 || x.CallAttachmentType == 4))
                                                    {
                                                        <tr>
                                                            <td>
                                                                @if (file.CallAttachmentType == 1)
                                                                {
                                                                    <span>@localizer["DispatchAudio"]</span>
                                                                }
                                                                else if (file.CallAttachmentType == 3)
                                                                {
                                                                    <span>@commonLocalizer["File"]</span>
                                                                }
                                                                else if (file.CallAttachmentType == 4)
                                                                {
                                                                    <span>@commonLocalizer["Video"]</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                <span>@file.FileName</span>
                                                            </td>
                                                            <td></td>
                                                            <td>
                                                                @if (file.Timestamp.HasValue)
                                                                {
                                                                    <span>@file.Timestamp.Value.TimeConverterToString(Model.Department)</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (file.CallAttachmentType == 1)
                                                                {
                                                                    <audio id="player" controls>
                                                                        <source src="@Url.Action("GetCallDispatchAudio", "Dispatch", new { Area = "User", callId = Model.Call.CallId })" type="audio/mp3">
                                                                    </audio>
                                                                }
                                                                else if (file.CallAttachmentType == 3)
                                                                {
                                                                    <span><a style="text-decoration:none;" class="btn btn-xs btn-success" asp-controller="Dispatch" asp-action="GetCallFile" asp-route-area="User" asp-route-callAttachmentId="@file.CallAttachmentId">@commonLocalizer["Download"]</a></span>
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="tab-pane" id="tab-5">
                                            <a style="text-decoration:none; float: right;" class="btn btn-xs btn-primary" href="@Url.Action("Upload", "Files", new {area = "User", type = 2, resourceId = Model.Call.CallId})">@localizer["AddImage"]</a>
                                            <div>
                                                @foreach (var image in Model.Call.Attachments.Where(x => x.CallAttachmentType == 2))
                                                {
                                                    <div>
                                                        <div class="ibox-content">
                                                            <div>
                                                                <dl class="dl-horizontal">
                                                                    <dt>@commonLocalizer["Name"]:</dt>
                                                                    <dd>@image.Name</dd>
                                                                    <dt>@commonLocalizer["Timestamp"]:</dt>
                                                                    @if (image.Timestamp.HasValue)
                                                                    {
                                                                        <dd>@image.Timestamp.Value.TimeConverterToString(Model.Department)</dd>
                                                                    }
                                                                    else
                                                                    {
                                                                        <dd>@commonLocalizer["Unknown"]</dd>
                                                                    }
                                                                    <dt>@commonLocalizer["Location"]:</dt>
                                                                    <dd>@commonLocalizer["Unknown"]</dd>
                                                                </dl>

                                                            </div>
                                                            <div>
                                                                <img style="max-width:300px;" src="@Url.Action("GetCallImage", "Dispatch", new {Area = "User", callId = image.CallId, attachmentId = image.CallAttachmentId})" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="tab-6">
                                            <div class="chat-content">
                                                <div id="note-messages-inner1" class="feed-activity-list chat-messages">
                                                </div>

                                                <div class="chat-message well">
                                                    <span class="input-box input-group">
                                                        <div id="note-container" style="width:100%; height: 300px;">

                                                        </div>

                                                        <span class="input-group-btn">
                                                            <button class="btn btn-success btn-small" type="button" onclick="resgrid.dispatch.viewcall.addCallNote1()" id="note-box-submit1">@localizer["AddNote"]</button>
                                                        </span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="tab-8">
                                            <table class="table table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>@commonLocalizer["Code"]</th>
                                                        <th>@commonLocalizer["Name"]</th>
                                                        <th>@commonLocalizer["Text"]</th>
                                                        <th>@commonLocalizer["Attachments"]</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var callProtocol in Model.Call.Protocols)
                                                    {
                                                        var protocol = Model.Protocols.FirstOrDefault(x => x.DispatchProtocolId == callProtocol.DispatchProtocolId);

                                                        if (protocol != null)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    <span>@protocol.Code</span>
                                                                </td>
                                                                <td>
                                                                    <span>@protocol.Name</span>
                                                                </td>
                                                                <td>
                                                                    <a data-toggle="modal" data-target="#protocolTextWindow" data-protocolId="@protocol.DispatchProtocolId">@localizer["ViewText"]</a>
                                                                </td>
                                                                <td>
                                                                    @if (protocol.Attachments != null && protocol.Attachments.Any())
                                                                    {
                                                                        foreach (var attachment in protocol.Attachments)
                                                                        {
                                                                            <dl>
                                                                                <dt>@attachment.FileName</dt>
                                                                                <dd> <a asp-controller="Protocols" asp-action="GetProtocolAttachment" asp-route-area="User" asp-route-protocolAttachmentId="@attachment.DispatchProtocolAttachmentId">@commonLocalizer["View"]</a></dd>
                                                                            </dl>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>@localizer["NoAttachments"]</span>
                                                                    }
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="tab-pane" id="tab-9">
                                            <h4>@localizer["CallsLinkedFromThisHeader"]</h4>
                                            <table class="table table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>@localizer["CallNumber"]</th>
                                                        <th>@commonLocalizer["Name"]</th>
                                                        <th>@localizer["LoggedOnLabel"]</th>
                                                        <th>@commonLocalizer["Note"]</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var linkedCalls in Model.Call.References)
                                                    {
                                                        <tr>
                                                            <td>
                                                                <span><a asp-controller="Dispatch" asp-action="ViewCall" asp-route-area="User" asp-route-callId="@linkedCalls.TargetCallId">@linkedCalls.TargetCall.Number</a></span>
                                                            </td>
                                                            <td>
                                                                <span>@linkedCalls.TargetCall.Name</span>
                                                            </td>
                                                            <td>
                                                                <span>@linkedCalls.TargetCall.LoggedOn.FormatForDepartment(Model.Department)</span>
                                                            </td>
                                                            <td>
                                                                @linkedCalls.Note
                                                            </td>
                                                        </tr>

                                                    }
                                                </tbody>
                                            </table>
                                            <h4>@localizer["CallsLinkedToThisHeader"]</h4>
                                            <table class="table table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>@localizer["CallNumber"]</th>
                                                        <th>@commonLocalizer["Name"]</th>
                                                        <th>@localizer["LoggedOnLabel"]</th>
                                                        <th>@commonLocalizer["Note"]</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var linkedCalls in Model.ChildCalls)
                                                    {
                                                        <tr>
                                                            <td>
                                                                <span><a asp-controller="Dispatch" asp-action="ViewCall" asp-route-area="User" asp-route-callId="@linkedCalls.SourceCallId">@linkedCalls.SourceCall.Number</a></span>
                                                            </td>
                                                            <td>
                                                                <span>@linkedCalls.SourceCall.Name</span>
                                                            </td>
                                                            <td>
                                                                <span>@linkedCalls.SourceCall.LoggedOn.FormatForDepartment(Model.Department)</span>
                                                            </td>
                                                            <td>
                                                                @linkedCalls.Note
                                                            </td>
                                                        </tr>

                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        @if (!String.IsNullOrWhiteSpace(Model.Call.CallFormData))
                                        {
                                            <div class="tab-pane" id="tab-10">
                                                <div id="fb-template"></div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="wrapper wrapper-content animated fadeInUp">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    @if (!String.IsNullOrWhiteSpace(Model.Call.GeoLocationData))
                    {
                        <div class="row">
                            <div class="col-sm-10 col-lg-offset-2" style="text-align: center;">
                                <div class="btn-group" style="display: inherit;">
                                    <a class="btn btn-large btn-block btn-success" style="width: 75%;" asp-controller="Mapping" asp-action="LiveRouting" asp-route-area="User" asp-route-callId="@Model.Call.CallId" style="color: #fff;">@commonLocalizer["Route"]</a>
                                    <button class="btn btn-large btn-success dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button>
                                    <ul class="dropdown-menu">
                                        @foreach (var station in Model.Stations)
                                        {
                                            <li><a asp-controller="Mapping" asp-action="StationRouting" asp-route-area="User" asp-route-callId="@Model.Call.CallId" asp-route-stationId="@station.DepartmentGroupId">Route from @station.Name</a></li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="row">
                        <div class="col-sm-12">
                            <h3>Notes</h3>
                            <div class="chat-content">
                                <div id="note-messages-inner" class="feed-activity-list chat-messages" style="overflow-y: scroll;overflow-x: hidden;max-height: 450px;">
                                </div>

                                <div class="chat-message well">
                                    <span class="input-box input-group">
                                        <input placeholder="@localizer["AddNotePlaceholder"]" type="text" class="form-control input-small" name="note-box" id="note-box" />
                                        <span class="input-group-btn">
                                            <button class="btn btn-success btn-small" type="button" onclick="resgrid.dispatch.viewcall.addCallNote()" id="note-box-submit">@localizer["AddNote"]</button>
                                        </span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" id="protocolTextWindow">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">@localizer["ProtocolText"]</h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal" aria-hidden="true">@commonLocalizer["Close"]</button>
            </div>

        </div>
    </div>
</div>

@section Scripts
    {
    <script type="text/javascript">
        var callId = @(Model.Call.CallId);
        var osmTileUrl = '@Resgrid.Config.MappingConfig.GetWebsiteOSMUrl()';
        var osmTileAttribution = '@Resgrid.Config.MappingConfig.LeafletAttribution';
    </script>

    <script src="@Url.Content("~/lib/formBuilder/dist/form-render.min.js")" type="text/javascript"></script>
    <script src="https://cdn.plyr.io/3.3.22/plyr.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery.slick/1.6.0/slick.min.js"></script>
    <script type="text/javascript">
        var callId = @(Model.Call.CallId);

        var newCallForm = $('#fb-template').formRender({
            dataType: 'json',
            formData: '@Html.Raw(Model.Call.CallFormData)',
            notify: {
                error: function(message) {

                },
                success: function(message) {
                    $('input, textarea, select', '.rendered-form').attr('readonly', true).attr('disabled', true)
                },
                warning: function(message) {

                }
            }

        });
    </script>

    <script src="~/js/app/common/signalr/resgrid.common.signalr.js" type="text/javascript"></script>
    <script src="~/js/app/internal/dispatch/resgrid.dispatch.viewcall.js" type="text/javascript"></script>
}
