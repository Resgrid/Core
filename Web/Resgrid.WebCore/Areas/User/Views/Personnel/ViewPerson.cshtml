@using Resgrid.Model
@using Resgrid.Web.Helpers
@model Resgrid.Web.Areas.User.Models.Personnel.ViewPersonView
@inject IStringLocalizer<Resgrid.Localization.Areas.User.Personnel.Person> localizer
@{
	ViewBag.Title = "Resgrid | View Profile" + @localizer["ViewPersonHeader"];
}


<div class="row wrapper border-bottom white-bg page-heading">
	<div class="col-sm-4">
		<h2>@localizer["ViewPersonHeader"]</h2>
		<ol class="breadcrumb">
			<li>
				<a asp-controller="Home" asp-action="Dashboard" asp-route-area="User">@commonLocalizer["HomeModule"]</a>
			</li>
			<li>
				<a asp-controller="Personnel" asp-action="Index" asp-route-area="User">@commonLocalizer["PersonnelModule"]</a>
			</li>
			<li class="active">
				<strong>@localizer["ViewPersonHeader"]</strong>
			</li>
		</ol>
	</div>
</div>

<div class="row">
	<div class="col-xs-12">
		<div class="wrapper wrapper-content">
			<div class="ibox float-e-margins">
				<div class="ibox-content">
					<div class="row">
						<div class="col-md-3 col-lg-3 " align="center"><img style="width: 100px; height: 100px; text-align: center;" src="@Resgrid.Config.SystemBehaviorConfig.ResgridApiBaseUrl/api/v3/Avatars/Get?id=@Model.Profile.UserId" onerror="this.src = '@Resgrid.Config.SystemBehaviorConfig.ResgridBaseUrl/images/defaultProfile.png'" /><h3>@Model.Profile.FullName.AsFirstNameLastName</h3></div>
						<div class=" col-md-9 col-lg-9 ">
							<table class="table table-user-information">
								<tbody>
									<tr>
										<td>Status:</td>
										@if (Model.ActionLog != null)
										{
											var statusDef = await CustomStatesHelper.GetCustomPersonnelStatus(Model.Department.DepartmentId, Model.ActionLog);

											if (Model.ActionLog.ActionTypeId <= 25)
											{
												<td><span class="label @statusDef.ButtonColor">@statusDef.ButtonText</span></td>
											}
											else
											{
												<td><span class="label label-default" style="background-color: @statusDef.ButtonColor;">@statusDef.ButtonText</span></td>
											}
										}
										else
										{
											<td><span class="label label-default">@commonLocalizer["StandingBy"]</span></td>
										}
									</tr>
									<tr>
										<td>Staffing:</td>
										@if (Model.UserState != null)
										{
											var stateDef = await CustomStatesHelper.GetCustomPersonnelStaffing(Model.Department.DepartmentId, Model.UserState);

											if (Model.UserState.State <= 25)
											{
												<td><span class="label @stateDef.ButtonColor">@stateDef.ButtonText</span></td>
											}
											else
											{
												<td><span class="label label-default" style="background-color: @stateDef.ButtonColor;">@stateDef.ButtonText</span></td>
											}
										}
										else
										{
											<td><span class="label label-default">@commonLocalizer["Available"]</span></td>
										}
									</tr>
									<tr>
										<td>@commonLocalizer["State"]:</td>
										<td>@Model.State</td>
									</tr>
									<tr>
										<td>@commonLocalizer["Group"]:</td>

										@if (Model.Group != null)
										{
											<td>@Model.Group.Name</td>
										}
										else
										{
											<td>@commonLocalizer["None"]</td>
										}
									</tr>
									<tr>
										<td>@commonLocalizer["Roles"]:</td>
										<td>@Model.Roles</td>
									</tr>
									@if (ClaimsAuthorizationHelper.CanViewPII())
									{
										<tr>
											<td>@commonLocalizer["Email"]</td>
											<td><a href="mailto:@Model.User.Email">@Model.User.Email</a></td>
										</tr>
										<tr>
											<td>@localizer["PhoneNumbers"]</td>
											<td>
												@if (!String.IsNullOrWhiteSpace(Model.Profile.HomeNumber))
												{
													<span>@Model.Profile.HomeNumber (@localizer["Home"])</span>
													<br />
												}
												@if (!String.IsNullOrWhiteSpace(Model.Profile.MobileNumber))
												{
													<span>@Model.Profile.MobileNumber (@localizer["Mobile"])</span>
												}
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts
{

}
